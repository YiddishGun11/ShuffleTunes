{"version":3,"file":"static/js/979.4258e86e.chunk.js","mappings":"ySAsDA,MAxCA,WAEI,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KAapB,OAXAC,EAAAA,EAAAA,YAAU,WACNC,IAAAA,IAAUC,EAAAA,EAAAA,WACLC,MAAK,SAACC,GACHL,EAAQK,EAASN,KAAK,GAAG,GAC7B,IACCO,OAAM,SAACT,GACJC,EAASD,EACb,GACR,GAAG,KAIC,oBAASU,UAAU,mBAAkB,SACf,IAAjBV,EAAMW,QACH,iCACI,gBAAKD,UAAU,eAAc,UACzB,gBAAKE,IAAKC,EAAMC,IAAI,OAAOC,MAAM,MAAMC,OAAO,WAElD,gBAAKN,UAAU,mBAAkB,UAC7B,6CAEJ,gBAAKA,UAAU,cAAa,UACxB,uBAAIR,EAAKe,eAIjB,iBAAKP,UAAU,uBAAsB,WACjC,qDACA,2BAAM,SAAC,MAAO,CAACQ,KAAM,GAAIR,UAAU,qBAKvD,E,UCyDA,SAASS,EAAeC,GAGpB,OAAgDrB,EAAAA,EAAAA,UAAS,IAAG,eAArDsB,EAAgB,KAAEC,EAAmB,KAGtCC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAcD,EAAAA,EAAAA,QAAO,MAe3B,OACI,iCACI,eAAIE,QAAS,kBAAIN,EAAMO,eAAc,EAAM,EAAC,2BAC5C,4BACI,kBAAOC,KAAK,WAAWC,YAAY,0BAA0BC,IAAKP,EAAWQ,UAAQ,EAACC,UAAW,EAAGC,UAAW,MAC/G,kBAAOL,KAAK,WAAWC,YAAY,wBAAwBC,IAAKL,EAAaM,UAAQ,EAACC,UAAW,EAAGC,UAAW,SAEnH,cAAGC,GAAG,6BAA4B,SAAEb,KACpC,mBAAQa,GAAG,eAAeR,QAAS,kBArBzB,WACd,IAAMS,EAAOZ,EAAUa,QAAQC,MACzBC,EAAYb,EAAYW,QAAQC,MAEnCF,IAASG,GACRhB,EAAoB,mDAM5B,CAU+CgB,EAAW,EAAC,uBAG/D,CAGA,SAASC,EAAanB,GAGlB,OAAoDrB,EAAAA,EAAAA,UAAS,IAAG,eAAzDyC,EAAkB,KAAEC,EAAqB,KAG1CC,GAAclB,EAAAA,EAAAA,QAAO,MAc3B,OACI,iCACI,eAAIE,QAAS,kBAAIN,EAAMuB,iBAAgB,EAAM,EAAC,yBAC9C,4BACI,kBAAOf,KAAK,OAAOC,YAAY,wBAAwBC,IAAKY,EAAaX,UAAQ,EAACC,UAAW,EAAGC,UAAW,MAC3G,mBAAQC,GAAG,iBAAiBR,QAAS,WAhBhCgB,EAAYN,QAAQC,QAEnBjB,EAAMH,QAChBwB,EAAsB,oCAaoC,EAAC,yBAE3D,cAAGP,GAAG,6BAA4B,SAAEM,MAGhD,CAGA,MArKA,SAAsB,GAAY,IAAXI,EAAQ,EAARA,SAGZC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAGP,GAA0B9C,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAGtB,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KAGpB,GAAoCJ,EAAAA,EAAAA,WAAS,GAAM,eAA5CiD,EAAU,KAAErB,EAAa,KAChC,GAAwC5B,EAAAA,EAAAA,WAAS,GAAM,eAAhDkD,EAAY,KAAEN,EAAe,KAcpC,OAVAvC,EAAAA,EAAAA,YAAU,WACNC,IAAAA,IAAUC,EAAAA,EAAAA,WACLC,MAAK,SAACC,GACHL,EAAQK,EAASN,KAAK,GAAG,GAC7B,IACCO,OAAM,SAACT,GACJC,EAASD,EACb,GACR,GAAG,KAEIkD,EAAAA,EAAAA,eACH,oBAASxC,UAAU,wBAAuB,SACpB,IAAjBV,EAAMW,QACH,iBAAKD,UAAU,qBAAoB,WAC/B,iBAAKA,UAAWmC,EAAQ,uBAAyB,wBAAwB,WACrE,wCACA,mBAAQnB,QAAS,kBAAIkB,GAAS,EAAM,EAAC,UAAC,SAAC,MAAM,CAAC1B,KAAM,WAExD,iBAAKR,UAAU,iBAAgB,WAC3B,iBAAKA,UAAU,uBAAsB,WACjC,eAAIgB,QAAS,kBAAIyB,QAAQC,IAAIlD,EAAKe,OAAO,EAAC,oBAC1C,wBAAKf,EAAKe,UACV,iBAAMiB,GAAG,aAAY,0CAEzB,gBAAKxB,UAAU,sBAAqB,UAChC,iBAAKA,UAAU,4BAA2B,WACtC,gBAAKA,UAAU,sBAAqB,SAC/BuC,GACG,SAACV,EAAY,CAACI,gBAAiBA,EAAiB1B,OAAQf,EAAKe,UAE7D,iCACI,yCACA,4BACI,uBAAIf,EAAKe,UACT,mBAAQS,QAAS,kBAAIiB,GAAgB,EAAK,EAAC,UAAC,SAAC,MAAa,CAACzB,KAAM,GAAIgB,GAAG,4BAKxF,gBAAKxB,UAAU,sBAAqB,SAC/BsC,GACG,SAAC7B,EAAc,CAACQ,cAAeA,KAE/B,iCACI,2CACA,4BACI,0CACA,mBAAQD,QAAS,kBAAIC,GAAc,EAAK,EAAC,UAAC,SAAC,MAAa,CAACT,KAAM,GAAIgB,GAAG,uCAUtG,iBAAKxB,UAAU,qBAAoB,WAC/B,iBAAKA,UAAWmC,EAAQ,uBAAyB,wBAAwB,WACrE,wCACA,mBAAQnB,QAAS,kBAAIkB,GAAS,EAAM,EAAC,UAAC,SAAC,MAAM,CAAC1B,KAAM,WAExD,iBAAKR,UAAU,iBAAgB,WAC3B,gBAAKA,UAAU,uBAAsB,UACjC,qBAEJ,gBAAKA,UAAU,sBAAqB,UAChC,0BACI,cAAGwB,GAAG,mBAAkB,kDAMpCmB,SAASC,KAE7B,E,oBC5DA,MArCA,SAAsB,GAAe,IAAdC,EAAW,EAAXA,YAEnB,GAA0BxD,EAAAA,EAAAA,WAAS,GAAM,eAAlCyD,EAAK,KAAEZ,EAAQ,KAEtB,OACI,oBAASlC,UAAU,0BAAyB,SACvC8C,GACG,SAAC,EAAY,CAACZ,SAAUA,KAExB,iCACI,iBAAKlC,UAAU,sBAAsBgB,QAAS,kBAAI6B,GAAY,EAAK,EAAC,WAChE,0BACI,SAAC,MAAW,CAACrC,KAAM,GAAIR,UAAU,sBAErC,4CAEJ,iBAAKA,UAAU,sBAAsBgB,QAAS,kBAAIkB,GAAS,EAAK,EAAC,WAC7D,0BACI,SAAC,MAAiB,CAAC1B,KAAM,GAAIR,UAAU,sBAE3C,qDAEJ,iBAAKA,UAAU,sBAAqB,WAChC,0BACI,SAAC,MAAU,CAACQ,KAAM,GAAIR,UAAU,sBAEpC,oBAAQ+C,KAAK,OAAOvB,GAAG,OAAM,WACzB,mBAAQG,MAAM,OAAM,sBACpB,mBAAQA,MAAM,OAAM,8BAOhD,E,UCnCA,SAASqB,IAEL,OAA6BZ,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCF,EAAK,EAALA,MAAOc,EAAW,EAAXA,YAEd,OACI,yBACKd,GACG,iBAAKnC,UAAU,iBAAiBgB,QAASiC,EAAY,WACjD,0BACI,SAAC,MAAa,CAACzC,KAAM,GAAIR,UAAU,sBAEvC,gDAGJ,iBAAKA,UAAU,iBAAiBgB,QAASiC,EAAY,WACjD,0BACI,SAAC,MAAc,CAACzC,KAAM,GAAIR,UAAU,sBAExC,+CAKpB,CAgCA,MA9BA,WAEI,OAAgCX,EAAAA,EAAAA,WAAS,GAAK,eAAvC6D,EAAQ,KAAEL,EAAW,KAE5B,OACI,oBAAS7C,UAAU,qBAAoB,SAClCkD,GACG,4BACI,iBAAKlD,UAAU,iBAAiBgB,QAAS,kBAAI6B,GAAY,EAAM,EAAC,WAC5D,0BACI,SAAC,MAAc,CAACrC,KAAM,GAAIR,UAAU,sBAExC,6CAEJ,SAACgD,EAAM,KACP,iBAAKhD,UAAU,iBAAgB,WAC3B,0BACI,SAAC,MAAM,CAACQ,KAAM,GAAIR,UAAU,sBAEhC,oDAIR,SAAC,EAAY,CAAC6C,YAAaA,KAI3C,EC9CMM,EAAe,CAACC,QAAS,GAE/B,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOrC,MACb,IAAK,WACD,OAAqB,IAAlBoC,EAAMF,QACE,CAACA,QAAS,GAGV,CAACA,QAAU,GAE1B,IAAK,UACD,OAAqB,IAAlBE,EAAMF,QACE,CAACA,QAAS,GAGV,CAACA,QAAU,GAE1B,QACE,MAAO,CAACA,QAAS,GAEvB,CAqDA,MAnDA,SAAgB,GAAqB,IAApBI,EAAiB,EAAjBA,kBAGb,GAA0BC,EAAAA,EAAAA,YAAWJ,EAASF,GAAa,eAApDG,EAAK,KAAEI,EAAQ,KAEfvB,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAYP,OACI,iBAAKnC,UAAWmC,EAAQ,sBAAuB,uBAAuB,WAClE,gBAAKnC,UAAU,uBAAsB,UACjC,mBAAQgB,QAAS,kBAAIwC,EAAkB,EAAE,EAAC,UAAC,8CAE/C,iBAAKxD,UAAU,uBAAsB,WACjC,iBAAKA,UAAU,8BAA6B,WACxC,mBAAQgB,QAAS,kBAAI0C,EAAS,CAACxC,KAAM,WAAW,EAAC,UAC7C,SAAC,MAAiB,CAACV,KAAM,GAAIgB,GAAG,kBAEjB,IAAlB8B,EAAMF,SACH,SAAC,EAAM,KAEP,uBAGR,iBAAKpD,UAAU,8BAA6B,WACxC,mBAAQgB,QAAS,kBAAI0C,EAAS,CAACxC,KAAM,YAAY,EAAC,UAC9C,SAAC,MAAM,CAACV,KAAM,GAAIgB,GAAG,kBAEN,IAAlB8B,EAAMF,SACH,SAAC,EAAQ,KAET,uBAGR,gBAAKpD,UAAU,8BAA6B,UACxC,mBAAQgB,QApCT,WACXrB,IAAAA,KAAW,GAAD,OAAIC,EAAAA,EAAG,WAAY,KAAQ,CACjC+D,iBAAiB,IAEpB9D,MAAK,WACF+D,OAAOC,SAAW,GACtB,GACJ,EA6BwC,UAAC,SAAC,MAAQ,CAACrD,KAAM,GAAIgB,GAAG,yBAKpE,E,UC3CA,MAlCA,SAAiB,GAAqB,IAApBgC,EAAiB,EAAjBA,kBAEPrB,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAEP,OACI,iBAAKnC,UAAWmC,EAAQ,eAAiB,gBAAgB,WACrD,iBAAKnC,UAAU,gBAAe,WAC1B,2BAAM,SAAC,MAAQ,CAACQ,KAAM,GAAIgB,GAAG,oBAC7B,mBAAQR,QAAS,kBAAIwC,EAAkB,EAAE,EAAC,UACtC,4CAGR,iBAAKxD,UAAU,gBAAe,WAC1B,2BAAM,SAAC,MAAY,CAACQ,KAAM,GAAIgB,GAAG,oBACjC,mBAAQR,QAAS,kBAAMwC,EAAkB,EAAE,EAAC,UACxC,kDAGR,iBAAKxD,UAAU,gBAAe,WAC9B,2BAAM,SAAC,MAAoB,CAACQ,KAAM,GAAIgB,GAAG,oBACrC,mBAAQR,QAAS,kBAAMwC,EAAkB,EAAE,EAAC,UACxC,gDAGR,iBAAKxD,UAAU,gBAAe,WAC1B,2BAAM,SAAC,KAAc,CAACQ,KAAM,GAAIgB,GAAG,oBACnC,mBAAQR,QAAS,kBAAIwC,EAAkB,EAAE,EAAC,UACtC,kDAKpB,E,wCC6GA,MAjIA,SAAsB,GAAe,IAAdM,EAAI,EAAJA,KAAKC,EAAM,EAANA,OAGxB,GAAwB1E,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KAGpB,GAA0BJ,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAGhBmE,GAAWM,EAAAA,EAAAA,MAGXC,GAAcC,EAAAA,EAAAA,KAAY,SAACZ,GAAK,OAAIA,EAAMa,gBAAgBF,WAAW,IAGrEG,GAAiBF,EAAAA,EAAAA,KAAY,SAACZ,GAAK,OAAGA,EAAMe,eAAejB,OAAO,IAGlEkB,GAAaJ,EAAAA,EAAAA,KAAY,SAACZ,GAAK,OAAGA,EAAMe,eAAeC,UAAU,IAGjEC,EAAkB,WAEhBb,EADDO,IAAgBH,GACNU,EAAAA,EAAAA,IAAgB,KAGhBA,EAAAA,EAAAA,IAAgBV,GAEjC,EAyDA,OACI,iBAAK9D,UAAU,kBAAkB,cAAY,qBAAoB,WAC7D,iBAAKA,UAAU,kBAAiB,WAC5B,mBAAQgB,QAAS,WAAK0C,GAASe,EAAAA,EAAAA,IAAW,SAAUf,GAASgB,EAAAA,EAAAA,IAAQZ,IAzDhE,SAACA,GAEdnE,IAAAA,KAAWC,EAAAA,EAAM,MAAO,CACpB,KAASkE,GACN,CACCH,iBAAkB,IAErB9D,MAAK,WACL4C,QAAQC,IAAI,MACb,IAEC3C,OAAM,SAAUT,GACbmD,QAAQC,IAAIpD,EAChB,GACR,CA2CyFqF,CAASb,EAAK,EAAE,SAAEA,IAC9FG,IAAgBH,GACb,mBAAQ9C,QAAS,WAAK0C,GAASc,EAAAA,EAAAA,IAAgBV,IAAQS,IAAmBb,GAASkB,EAAAA,EAAAA,KAAW,GAAO,EAAE,UAAC,SAAC,MAAiB,CAACpE,KAAM,GAAIR,UAAU,4BAE/I,mBAAQgB,QAAS,WAAK0C,GAASc,EAAAA,EAAAA,IAAgBV,IAAQS,IAtBjD,WAClB,IACI5E,IAAAA,IAAUC,EAAAA,EAAM,aAAc,CAAC+D,iBAAiB,IAC3C9D,MAAK,SAACC,GACHL,EAAQK,EAASN,KAAK,GAAG,GAC7B,IACCO,OAAM,SAACT,GACJC,EAASD,EACb,GAIR,CAFA,MAAMA,GACFC,EAASD,EACb,CACJ,CAS0FuF,GAAiBnB,GAASkB,EAAAA,EAAAA,KAAW,GAAO,EAAE,UAAC,SAAC,MAAY,CAACpE,KAAM,GAAIR,UAAU,+BAInK,gBAAKA,UAAU,qBAAoB,SAC9BiE,IAAgBH,GACb,gBAAK9D,UAAU,eAAc,SACvBoE,GACE,iBAAKpE,UAAU,qBAAoB,WAC/B,6DACA,4BACI,mBAAQgB,QAAS,kBAAI0C,GAASkB,EAAAA,EAAAA,KAAW,GAAO,EAAC,qBACjD,mBAAQ5D,QAAS,kBAvDhC,WACb,IACIrB,IAAAA,KAAWC,EAAAA,EAAM,WAAY,CACzB,QAAYmE,EACZ,WAAeO,IAElBzE,MAAK,WACF6D,GAASkB,EAAAA,EAAAA,KAAW,GACxB,IAEC7E,OAAM,SAAUT,GACbC,EAASD,EACb,GAIJ,CAFA,MAAMA,GACFC,EAASD,EACb,CACJ,CAsCqDwF,EAAU,EAAC,wBAIxC,8BACsB,IAAjBxF,EAAMW,OACHT,EAAKuF,KAAI,SAACC,GACN,OACI,mBAAQxD,GAAIwD,EAASV,WAAsCtE,UAAU,iBAAiBgB,QAAS,WAAK0C,GAASkB,EAAAA,EAAAA,KAAW,IAASlB,GAASuB,EAAAA,EAAAA,IAAcD,EAASV,YAAY,EAAE,SAAEU,EAASE,cAApJF,EAASV,WAEvD,KAEA,yDAMhB,qBAKpB,ECrIMa,EAAUvF,EAAAA,EAAM,SAEtB,SAASwF,EAAc1E,GACnB,OACI,8BACqB,YAAhBA,EAAMpB,OACH,4BACI,4CACA,cAAGkC,GAAG,eAAc,6CAGxB,iBAAKA,GAAG,kBAAiB,WACrB,4CACA,wDAKpB,CAEA,SAAS6D,IAGL,OAAwBhG,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KAGdiE,GAAWM,EAAAA,EAAAA,MAGjB,GAA0B3E,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KA2BtB,OAxBAG,EAAAA,EAAAA,YAAU,WAGNgE,GAASc,EAAAA,EAAAA,IAAgB,IAEzB,IACI7E,IAAAA,IAAUwF,EAAS,CAACxB,iBAAiB,IAEhC9D,MAAK,SAACC,GACHL,EAAQK,EAASN,KAAK,GAAG,GAC7B,IACCO,OAAM,SAACT,GACJC,EAASD,GACTmD,QAAQ6C,OACZ,GAMR,CAHA,MAAMhG,GACFC,EAASD,GACTmD,QAAQ6C,OACZ,CAEJ,GAAG,CAAC5B,KAGA,gBAAK,cAAY,iBAAgB,SACX,IAAjBpE,EAAMW,QACH,gBAAKD,UAAU,mBAAkB,SACZ,IAAhBR,EAAKS,QACF,SAACmF,EAAa,CAAC9F,MAAO,aAEtB,4BACI,4CACA,gBAAKU,UAAU,mBAAkB,SAC5BR,EAAKuF,KAAI,SAACjB,GAAI,OACX,SAAC,EAAY,CAACA,KAAMA,EAAKyB,WAA+BxB,OAAQD,EAAK0B,SAA3B1B,EAAK0B,QAAgC,YAOnG,SAACJ,EAAa,CAAC9F,MAAO,MAItC,CAKA,OAAemG,EAAAA,EAAAA,MAAMJ,GCpFrB,MAVA,WAEI,OACI,iBAAKrF,UAAU,mBAAkB,WAC7B,sDACA,gBAAKA,UAAU,qBAG3B,EC4CA,MAnCA,WACI,IAAM0D,GAAWM,EAAAA,EAAAA,MACX0B,GAAOxB,EAAAA,EAAAA,KAAY,SAACZ,GAAK,OAAKA,EAAMqC,aAAaD,IAAI,IAe3D,OACI,iBAAK1F,UAAU,eAAe,cAAY,mBAAkB,WACxD,yBACc,KAAT0F,GACG,mBAAQ1F,UAAU,cAAa,UAAC,SAAC,MAAc,CAACQ,KAAM,GAAIgB,GAAG,iBAE7D,mBAAQR,QAAS,WAAK0C,GAASkC,EAAAA,EAAAA,OAhB3CjG,IAAAA,KAAWC,EAAAA,EAAM,aACZC,MAAK,WACF4C,QAAQC,IAAI,MAChB,IAEC3C,OAAM,SAAUT,GACbmD,QAAQC,IAAIpD,EAChB,GAS+D,EAAGU,UAAU,cAAa,UAAC,SAAC,MAAU,CAACQ,KAAM,GAAIgB,GAAG,mBAGnH,gBAAKxB,UAAU,kBAAiB,UAC5B,0BACI,6BAAU0F,UAK9B,E,oBCrCA,SAASG,EAAcnF,GACnB,OACI,8BACqB,aAAhBA,EAAMpB,OACH,yEAEA,qDAIhB,CAEA,SAASwG,EAAKpF,GAEV,OAA8BrB,EAAAA,EAAAA,WAAS,GAAK,eAArC+D,EAAO,KAAEqB,EAAU,KAY1B,OACI,iBAAKzE,UAAWoD,EAAU,cAAgB,OAAO,WAC7C,mBAAQpC,QAAS,WAZN,IAAC+E,IAYqBrF,EAAMc,GAX3C7B,IAAAA,OAAaC,EAAAA,EAAM,uBAAyBmG,GACvClG,MAAK,WACF,IAEHE,OAAM,WACH,IAMwC0E,GAAW,EAAM,EAAE,UAAE,SAAC,MAAQ,CAACjE,KAAM,GAAIR,UAAU,yBAC/F,uBAAIU,EAAMsF,UAFyCtF,EAAMc,GAKrE,CAoFA,MAjFA,SAAkB,GAAa,IAAZA,EAAE,EAAFA,GAAIwE,EAAK,EAALA,MAEnB,GAAwB3G,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KACpB,GAA0BJ,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAEtB,GAA8BF,EAAAA,EAAAA,WAAS,GAAK,eAArC+D,EAAO,KAAEqB,EAAU,KAyBpBH,GAAaJ,EAAAA,EAAAA,KAAY,SAACZ,GAAK,OAAKA,EAAMa,gBAAgBf,OAAO,IACjEM,GAAWM,EAAAA,EAAAA,MAGXiC,EAAa,WAEXvC,EADDlC,IAAO8C,GACG4B,EAAAA,EAAAA,IAAgB,IAGhBA,EAAAA,EAAAA,IAAgB1E,GAEjC,EAEA,OACI,iBAAKxB,UAAWoD,EAAU,WAAa,OAAQ,cAAY,qBAAoB,WAC3E,iBAAKpD,UAAU,gBAAgBgB,QAAS,WAAK0C,GAASwC,EAAAA,EAAAA,IAAgB1E,IAAMyE,IApChFtG,IAAAA,IAAUC,EAAAA,EAAM,kBAAoB4B,GAC/B3B,MAAK,SAACC,GACHL,EAAQK,EAASN,KAAK,GAAG,GAC7B,IACCO,OAAM,SAACT,GACJC,EAASD,GACTmD,QAAQ6C,OACZ,GA6BqG,EAAE,WACnG,cAAGtF,UAAU,gBAAe,SAAEgG,KAC9B,4BACI,mBAAQhG,UAAU,cAAcgB,QAAS,YA7BlC,SAACQ,GACpB7B,IAAAA,OAAaC,EAAAA,EAAM,aAAe4B,GAC7B3B,MAAK,WACF,IAEHE,OAAM,WACH,GAEZ,CAqB8DoG,CAAe3E,GAAKiD,GAAW,EAAM,EAAE,UAAC,SAAC,MAAO,CAACzE,UAAU,qBAAqBQ,KAAM,QACpI,mBAAQR,UAAU,kBAAiBgB,QAAS,WAAK0C,GAASwC,EAAAA,EAAAA,IAAgB1E,IAAMyE,GAAY,EAAE,UAAC,SAAC,MAAe,CAACjG,UAAU,qBAAqBQ,KAAM,cAG7J,gBAAKR,UAAU,mBAAkB,SACX,IAAjBV,EAAMW,QACH,8BACKqE,IAAe9C,GACZ,gBAAKxB,UAAU,iBAAgB,SACV,IAAhBR,EAAKS,QACF,kEAEA,yBACKT,EAAKuF,KAAI,SAACjB,GACP,OACI,SAACgC,EAAI,CAACtE,GAAIsC,EAAK0B,QAASQ,MAAOlC,EAAKyB,YAAiBzB,EAAK0B,QAElE,SAKZ,sBAIR,SAACK,EAAa,CAACvG,MAAO,SAK1C,EClHA,SAAS8G,EAAc1F,GACnB,OACI,8BACqB,aAAhBA,EAAMpB,OACH,cAAGU,UAAU,mBAAkB,6DAE/B,cAAGA,UAAU,mBAAkB,uCAI/C,CAEA,SAASqG,IAGL,OAAwBhH,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KACpB,GAA4CJ,EAAAA,EAAAA,WAAS,GAAM,eAApDiH,EAAc,KAAEC,EAAiB,KAGxC,GAA0BlH,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAEhBmE,GAAWM,EAAAA,EAAAA,MAGXwC,GAAQ1F,EAAAA,EAAAA,QAAO,MAGf2F,EAAgB,WACDF,GAAjBD,EACJ,GAGA5G,EAAAA,EAAAA,YAAU,WAGNgE,GAASwC,EAAAA,EAAAA,IAAgB,IAEzB,IACIvG,IAAAA,IAAUC,EAAAA,EAAM,aAAc,CAAC+D,iBAAkB,IAC5C9D,MAAK,SAACC,GACHL,EAAQK,EAASN,KAAK,GAAG,GAC7B,IACCO,OAAM,SAACT,GACJC,EAASD,EACb,GAKR,CAHA,MAAMA,GACFC,EAASD,GACTmD,QAAQ6C,OACZ,CACJ,GAAG,CAAC5B,IAiBJ,OACI,iBAAK1D,UAAU,sBAAsB,cAAY,qBAAoB,WACjE,iBAAKA,UAAU,0BAAyB,WACpC,2CACCsG,GACG,mBAAQtF,QAAS,kBAAIyF,GAAe,EAAC,UAAC,SAAC,MAAW,CAAEjG,KAAM,GAAIR,UAAU,oCAExE,mBAAQgB,QAAS,kBAAIyF,GAAe,EAAC,UAAC,SAAC,MAAS,CAACjG,KAAM,GAAIR,UAAU,uCAG7E,yBACKsG,GACG,kBAAMtG,UAAU,eAAe0G,SA1B9B,WACb/G,IAAAA,KAAWC,EAAAA,EAAM,kBAAmB,CAChC,aAAiB4G,EAAM9E,QAAQC,OAChC,CAACgC,iBAAkB,IACjB9D,MAAK,WACN,IAGCE,OAAM,WACH0C,QAAQ6C,OACZ,GACR,EAekE,WAC9C,kBAAOpE,KAAK,OAAOC,YAAY,wBAAwBC,IAAKoF,KAC5D,mBAAQtF,KAAK,SAAQ,8BAGzB,sBAGR,yBACsB,IAAjB5B,EAAMW,QACH,8BACqB,IAAhBT,EAAKS,QACF,SAACmG,EAAa,CAAC9G,MAAO,cAEtB,gBAAKU,UAAU,qBAAoB,SAC9BR,EAAKuF,KAAI,SAACjB,GACP,OACI,SAAC,EAAQ,CAACtC,GAAIsC,EAAKQ,WAAY0B,MAAOlC,EAAKoB,cAAmBpB,EAAKQ,WAE3E,SAKZ,SAAC8B,EAAa,CAAC9G,MAAO,SAK1C,CAEA,OAAemG,EAAAA,EAAAA,MAAMY,G,uCCjHrB,SAASM,IAEL,OAA0CtH,EAAAA,EAAAA,UAAS,IAAG,eAA/CuH,EAAa,KAAEC,EAAgB,KAChCC,GAAiBhG,EAAAA,EAAAA,QAAO,IAmB9B,SAASiG,EAAsBC,GAC3BA,EAAMC,iBACN,IAAMC,EAAgBF,EAAMG,cAAcxF,MAG1C,OAFAkF,GAAiB,SAAAnF,GAAO,OAAIA,EAAQ0F,QAAO,SAAAC,GAAS,OAAIA,IAAcH,CAAa,GAAC,IACpFJ,EAAepF,QAAQ0F,QAAO,SAAAE,GAAS,OAAIA,EAAUvE,OAASmE,CAAa,IACpEK,EAAAA,GAAAA,KAAyB,aAAD,OAAcL,EAAa,oCAAoC,qBAAsB,IACxH,CAgCA,OACI,iBAAK,cAAY,wBAAuB,WACpC,SAAC,KAAqB,KACtB,kBAAMR,SAzBd,SAAmBM,GAEf,GADAA,EAAMC,iBACFH,EAAepF,QAAQzB,OAAQ,CAE/B,IAC8C,EADxCT,EAAO,IAAIgI,SAAW,UACJV,EAAepF,SAAO,IAA9C,2BAAiD,CAAC,IAAvC4F,EAAS,QAChB9H,EAAKiI,OAAO,YAAaH,EAC7B,CAAC,+BACDC,EAAAA,GAAAA,KAAyB,cAAe,wBAAyB,KACjE5H,IAAAA,KAAW,GAAD,OAAIC,EAAAA,EAAG,gBAAgBJ,EAAM,CACnCkI,QAAS,CAAC,eAAgB,uBAC1B/D,iBAAkB,IAEjB9D,MAAK,WACF0H,EAAAA,GAAAA,QAA4B,+CAAiD,gBAAiB,IAClG,IACCxH,OAAM,WACHwH,EAAAA,GAAAA,MAA0B,qBAAsB,uBAAwB,IAC5E,GACR,CACJ,EAKiC,WACrB,kBAAOrG,KAAM,OAAQyG,UAAU,EAAMC,OAAQ,aAAcpG,GAAI,iBAAkBxB,UAAU,mBAAmB6H,SA3D1H,SAAwBb,GAEEc,OAAOC,QAAQf,EAAMgB,OAAOC,OAAOlD,KAAI,SAAAmD,GAAK,OAAIA,EAAM,EAAE,IAChEC,SAAQ,SAAAb,GAElB,IAAqF,IAAjFV,EAAcwB,WAAU,SAAAf,GAAc,OAAOA,IAAcC,EAAUvE,IAAI,IAAW,CAEpF,GAAI6D,EAAc3G,QAdhB,GAeE,OAAOsH,EAAAA,GAAAA,KAAyB,4BAAD,OAfjC,GAeuE,mBAAmB,iBAAkB,KAG9GV,GAAkB,SAAAnF,GAAO,wBAAQA,GAAO,CAAE4F,EAAUvE,MAAO,IAC3D+D,EAAepF,QAAQ2G,KAAKf,EAChC,CACJ,GACJ,EA4CmJ,cAAY,gBACnJ,kBAAOgB,QAAQ,iBAAgB,UAC3B,gBAAKtI,UAAU,2BAA0B,SAER,IAAzB4G,EAAc3G,QACN,4DAEA2G,EAAc7B,KAAI,SAAAsC,GACd,OACI,2CACQA,GACJ,mBAAQnG,KAAK,SAAQlB,UAAU,0BAA0B2B,MAAO0F,EAAWrG,QAAS+F,EAAqB,UAAC,SAAC,MAAO,CAAC/G,UAAU,gCAFvHqH,EAKlB,SAKpB,iBAAKrH,UAAU,sBAAqB,WAChC,mBAAQkB,KAAK,SAASF,QAtDtC,WACI,GAAG4F,EAAc3G,OAGb,OAFA4G,EAAiB,IACjBC,EAAepF,QAAU,GAClB6F,EAAAA,GAAAA,KAAyB,6BAA8B,oBAAqB,IAE3F,EAgD2D,uBAC3C,mBAAQrG,KAAK,SAAQ,8BAKzC,CAEA,OAAeuE,EAAAA,EAAAA,MAAMkB,GCpBrB,OAvEA,WAEI,IAAOxE,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,MAEP,GAA2C9C,EAAAA,EAAAA,UAAS,GAAE,eAAhDkJ,EAAc,KAAE/E,EAAiB,KAIvC,OACI,4BACI,SAAC,EAAM,CAAC+E,eAAgBA,EAAgB/E,kBAAmBA,KAC3D,iBAAKxD,UAAWmC,EAAQ,yBAA2B,0BAA0B,WAEzE,SAAC,EAAO,CAACoG,eAAgBA,EAAgB/E,kBAAmBA,KAC5D,iBAAKxD,UAAU,uBAAsB,WACjC,gBAAKA,UAAU,eAAc,SAEtB,WACC,OAAOuI,GACP,KAAK,EACD,OACI,iBAAKvI,UAAU,2BAA0B,WACrC,uDACA,6FACA,mBAAQgB,QAAS,kBAAMwC,EAAkB,EAAE,EAAC,2BAGxD,KAAK,EACD,OACI,SAAC,EAAQ,IAGjB,KAAK,EACD,OACI,SAAC,EAAQ,IAGb,KAAK,EACL,OACI,SAAC,EAAW,IAGpB,KAAK,EACD,OACI,SAAC,EAAQ,IAGjB,QACI,OACI,mBAIZ,CApCG,MAsCP,0BAGY,SAAC,EAAW,cAW5C,C","sources":["components/Profil/Profil.js","components/Settings/UserSettings/UserSettings.js","components/Settings/DropSettings/DropSettings.js","components/Settings/Settings.js","components/NavBar/NavBar.js","components/SideBar/SideBar.js","components/FileList/FileListItem.js","components/FileList/FileList.js","components/FavSongs/FavSongs.js","components/SoundPlayer/SoundPlayer.js","components/PlayList/DropDown/DropDown.js","components/PlayList/Playlist.js","components/UploadMusic/UploadMusic.js","pages/DashBoard/DashBoard.js"],"sourcesContent":["import \"./Profil.scss\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport axios from 'axios'\r\n\r\nimport {BiError} from 'react-icons/bi'\r\n\r\nimport logo from '../../img/profil-image.png';\r\n\r\n//importing dynamic url\r\nimport {URL} from '../../scripts/url'\r\n\r\n\r\nfunction Profil(){\r\n\r\n    const [error, setError] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        axios.get(URL + '/user/' + 4 )\r\n            .then((response) =>{\r\n                setData(response.data[0][0])\r\n            })\r\n            .catch((error) =>{\r\n                setError(error);\r\n            })\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <section className='profil-container'>\r\n            {error.length === 0 ?(\r\n                <>\r\n                    <div className='profil-image'>\r\n                        <img src={logo} alt=\"Logo\" width=\"150\" height=\"150\"/>\r\n                    </div>\r\n                    <div className=\"change-image-div\">\r\n                        <p>Change Photo ?</p>\r\n                    </div>\r\n                    <div className='profil-name'>\r\n                        <p>{data.pseudo}</p>\r\n                    </div>\r\n                </>\r\n            ):(\r\n                <div className=\"profil-error-message\">\r\n                    <p>An error just occured...</p>\r\n                    <span><BiError size={18} className=\"error-icon\"/></span> \r\n                </div>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profil;","import {useContext, useEffect, useState, useRef} from 'react'\r\nimport './UserSettings.scss'\r\n\r\nimport {createPortal} from 'react-dom'\r\nimport { ThemeContext } from '../../Context/ThemeContext';\r\n\r\nimport {URL} from '../../../scripts/url'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {BiExit} from 'react-icons/bi'\r\nimport {BsFillPenFill} from 'react-icons/bs'\r\n\r\nfunction UserSettings({setModal}){\r\n\r\n    //adapt theme colors\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    //catching errors\r\n    const [error, setError] = useState([]);\r\n\r\n    //data from useEffect()\r\n    const [data, setData] = useState([])\r\n\r\n    //state manipulation for changing the display dynamically\r\n    const [changePswd, setChangePswd] = useState(false);\r\n    const [changePseudo, setChangePseudo] = useState(false);\r\n\r\n\r\n    //load playlists\r\n    useEffect(() =>{\r\n        axios.get(URL + '/user/' + 2 )\r\n            .then((response) =>{\r\n                setData(response.data[0][0])\r\n            })\r\n            .catch((error) =>{\r\n                setError(error);\r\n            })\r\n    }, []);\r\n\r\n    return createPortal(\r\n        <section className='user-settings-section'>\r\n            {error.length === 0?(\r\n                <div className='user-settings-body'>\r\n                    <div className={theme ? 'settings-header-dark' : 'settings-header-light'}>\r\n                        <h1>My account</h1>\r\n                        <button onClick={()=>setModal(false)}><BiExit size={30} /></button>\r\n                    </div>\r\n                    <div className='settings-items'>\r\n                        <div className='settings-user-pseudo'>\r\n                            <h1 onClick={()=>console.log(data.pseudo)}>Hello</h1>\r\n                            <h1>{data.pseudo}</h1>\r\n                            <span id='hello-span'>👋🏻</span>\r\n                        </div>\r\n                        <div className='settings-user-infos'>\r\n                            <div className='settings-user-infos-items'>\r\n                                <div className='change-informations'>\r\n                                    {changePseudo ?(\r\n                                        <ChangePseudo setChangePseudo={setChangePseudo} pseudo={data.pseudo}/>\r\n                                    ):(\r\n                                        <>\r\n                                            <h2>Your pseudo</h2>\r\n                                            <div>\r\n                                                <p>{data.pseudo}</p>\r\n                                                <button onClick={()=>setChangePseudo(true)}><BsFillPenFill size={15} id=\"settings-pen\"/></button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                                <div className='change-informations'>\r\n                                    {changePswd ?(\r\n                                        <ChangePassword setChangePswd={setChangePswd} />\r\n                                    ):(\r\n                                        <>\r\n                                            <h2>Your password</h2>\r\n                                            <div>\r\n                                                <p>*************</p>\r\n                                                <button onClick={()=>setChangePswd(true)}><BsFillPenFill size={15} id=\"settings-pen\"/></button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <div className='user-settings-body'>\r\n                    <div className={theme ? 'settings-header-dark' : 'settings-header-light'}>\r\n                        <h1>My account</h1>\r\n                        <button onClick={()=>setModal(false)}><BiExit size={30} /></button>\r\n                    </div>\r\n                    <div className='settings-items'>\r\n                        <div className='settings-user-pseudo'>\r\n                            <h1>{}</h1>\r\n                        </div>\r\n                        <div className='settings-user-infos'>\r\n                            <div>\r\n                                <p id='modal-error-text'>An error just occured...</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </section>, document.body\r\n    )\r\n}\r\n\r\n\r\nfunction ChangePassword(props) {\r\n\r\n    //handling errors\r\n    const [modificationPswd, setModificationPswd] = useState('')\r\n\r\n    //inputs refs\r\n    const pswdInput = useRef(null);\r\n    const confirmPswd = useRef(null);\r\n\r\n    const checkPswd = () => {\r\n        const pswd = pswdInput.current.value;\r\n        const checkPswd = confirmPswd.current.value;\r\n\r\n        if(pswd !== checkPswd){\r\n            setModificationPswd('please, select the same password in the 2 fields')\r\n        }\r\n\r\n        else {\r\n            //axios request\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h2 onClick={()=>props.setChangePswd(false)}>New password</h2>\r\n            <div>\r\n                <input type=\"password\" placeholder='Enter your new password' ref={pswdInput} required minLength={5} maxLength={20}></input>\r\n                <input type=\"password\" placeholder='Confirm your password' ref={confirmPswd} required minLength={5} maxLength={20}></input>\r\n            </div>\r\n            <p id='modification-error-message'>{modificationPswd}</p>\r\n            <button id='confirm-pswd' onClick={()=>checkPswd()}>Confirm</button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction ChangePseudo(props){\r\n\r\n    //handling errors on modifications\r\n    const [modificationPseudo, setModificationPseudo] = useState('');\r\n\r\n    //inputs refs\r\n    const pseudoInput = useRef(null);\r\n\r\n    const checkPseudo = () => {\r\n        let pseudo = pseudoInput.current.value;\r\n\r\n        if(pseudo === props.pseudo){\r\n            setModificationPseudo('please, select a different pseudo')\r\n        }\r\n\r\n        else {\r\n            //axios request\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h2 onClick={()=>props.setChangePseudo(false)}>New pseudo</h2>\r\n            <div>\r\n                <input type=\"text\" placeholder='Enter your new pseudo' ref={pseudoInput} required minLength={5} maxLength={20}></input>\r\n                <button id='confirm-pseudo' onClick={()=>checkPseudo()}>Confirm</button>\r\n            </div>\r\n            <p id='modification-error-message'>{modificationPseudo}</p>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserSettings;","import React, {useState} from 'react'\r\nimport './DropSettings.scss'\r\n\r\nimport UserSettings from '../UserSettings/UserSettings'\r\n\r\nimport {HiArrowLeft} from 'react-icons/hi'\r\nimport {MdLanguage} from 'react-icons/md'\r\nimport {BsPersonLinesFill} from 'react-icons/bs'\r\n\r\nfunction DropSettings({setDropdown}){\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    return(\r\n        <section className='drop-settings-container'>\r\n            {modal ? (\r\n                <UserSettings setModal={setModal}/>\r\n            ):(\r\n                <>\r\n                    <div className='drop-settings-items' onClick={()=>setDropdown(true)}>\r\n                        <div>\r\n                            <HiArrowLeft size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <button>Go Back</button>\r\n                    </div>\r\n                    <div className='drop-settings-items' onClick={()=>setModal(true)}>\r\n                        <div>\r\n                            <BsPersonLinesFill size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <button>Profile settings</button>\r\n                    </div>\r\n                    <div className='drop-settings-items'>\r\n                        <div>\r\n                            <MdLanguage size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <select name=\"cars\" id=\"cars\">\r\n                            <option value=\"saab\">English</option>\r\n                            <option value=\"saab\">French</option>\r\n                        </select>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DropSettings;","import React, {useState, useContext} from 'react'\r\nimport './Settings.scss'\r\n\r\nimport { ThemeContext } from '../Context/ThemeContext'\r\nimport DropSettings from './DropSettings/DropSettings'\r\n\r\nimport {BsFillGearFill,BsFillMoonFill, BsFillSunFill} from 'react-icons/bs'\r\nimport {FaInfo} from 'react-icons/fa'\r\n\r\nfunction Switch(){\r\n\r\n    const {theme, toggleTheme} = useContext(ThemeContext);\r\n\r\n    return(\r\n        <div>\r\n            {theme ? (\r\n                <div className='settings-items' onClick={toggleTheme}>\r\n                    <div>\r\n                        <BsFillSunFill size={22} className=\"settings-icons\"/>\r\n                    </div>\r\n                    <button>LIGHT THEME</button>\r\n                </div>\r\n            ):(\r\n                <div className='settings-items' onClick={toggleTheme}>\r\n                    <div>\r\n                        <BsFillMoonFill size={22} className=\"settings-icons\"/>\r\n                    </div>\r\n                    <button>DARK THEME</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Settings(){\r\n\r\n    const [dropdown, setDropdown] = useState(true);\r\n\r\n    return(\r\n        <section className='settings-container'>\r\n            {dropdown ? (\r\n                <div>\r\n                    <div className='settings-items' onClick={()=>setDropdown(false)}>\r\n                        <div>\r\n                            <BsFillGearFill size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <button>Settings</button>\r\n                    </div>\r\n                    <Switch />\r\n                    <div className='settings-items'>\r\n                        <div>\r\n                            <FaInfo size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <button>Informations</button>\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <DropSettings setDropdown={setDropdown}/>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings;\r\n","import React, {useContext, useReducer} from 'react';\r\nimport './NavBar.scss';\r\n\r\nimport { ThemeContext } from '../Context/ThemeContext';\r\nimport axios from 'axios';\r\nimport {URL} from '../../scripts/url'\r\n\r\n//react icons\r\nimport {BsPersonLinesFill, BsGear} from 'react-icons/bs'\r\nimport {BiLogOut} from 'react-icons/bi'\r\n\r\n//import Profil and Settings components\r\nimport Profil from '../Profil/Profil';\r\nimport Settings from '../Settings/Settings';\r\n\r\nconst displayState = {display: 0};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'settings':\r\n        if(state.display === 1) {\r\n            return {display: 0}\r\n          }\r\n          else {\r\n            return {display : 1}\r\n          }\r\n    case 'profile':\r\n        if(state.display === 2) {\r\n            return {display: 0}\r\n        }\r\n        else {\r\n            return {display : 2}\r\n        }\r\n    default:\r\n      return {display: 0}\r\n  }\r\n}\r\n\r\nfunction NavBar({setContentDisplay}){\r\n\r\n    //useReducer to manage display between Profile and UserSettings component\r\n    const [state, dispatch] = useReducer(reducer, displayState);\r\n\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n\r\n    const logout = () => {\r\n        axios.post(`${URL}/logout`, (null) , {\r\n            withCredentials: true,\r\n        })\r\n        .then(() => {\r\n            window.location = \"/\";\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={theme ? 'navbar-section-dark': 'navbar-section-light'}>\r\n            <div className='navbar-section-items'>\r\n                <button onClick={()=>setContentDisplay(0)}><h1>ShuffleTunes</h1></button>\r\n            </div>\r\n            <div className='navbar-section-icons'>\r\n                <div className='navbar-section-icons-childs'>\r\n                    <button onClick={()=>dispatch({type: \"profile\"})}>\r\n                        <BsPersonLinesFill size={20} id=\"navbar-icon\"/>\r\n                    </button>\r\n                    {state.display === 2 ?(\r\n                        <Profil />\r\n                    ):(\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n                <div className='navbar-section-icons-childs'> \r\n                    <button onClick={()=>dispatch({type: \"settings\"})}>\r\n                        <BsGear size={20} id=\"navbar-icon\"/>\r\n                    </button>\r\n                    {state.display === 1 ?(\r\n                        <Settings/>\r\n                    ):(\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n                <div className='navbar-section-icons-childs'>\r\n                    <button onClick={logout}><BiLogOut size={20} id=\"navbar-icon\"/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n/*\r\n    <div>\r\n        <BsPersonLinesFill size={25} />\r\n    </div>\r\n    <div>       \r\n        <BsGear size={25} />\r\n    </div>\r\n    <div>\r\n        <BiLogOut size={25}/>\r\n    </div>\r\n\r\n*/","import React, {useContext} from 'react'\r\nimport './SideBar.scss'\r\n\r\nimport { ThemeContext } from '../Context/ThemeContext'\r\n\r\nimport {BsFolderPlus, BsFolder} from 'react-icons/bs'\r\nimport {AiOutlineHeart} from 'react-icons/ai'\r\nimport {MdOutlinePlaylistAdd} from 'react-icons/md'\r\n\r\n\r\nfunction SideBar({setContentDisplay}){\r\n\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    return(\r\n        <div className={theme ? 'sidebar-dark' : 'sidebar-light'}>\r\n            <div className='sidebar-item1'>\r\n                <span><BsFolder size={25} id=\"sidebar-icon\"/></span>\r\n                <button onClick={()=>setContentDisplay(1)}>\r\n                    <p>Your Files</p>\r\n                </button>\r\n            </div>\r\n            <div className='sidebar-item1'>\r\n                <span><BsFolderPlus size={25} id=\"sidebar-icon\"/></span>\r\n                <button onClick={() => setContentDisplay(3)}>\r\n                    <p>Upload new files</p>\r\n                </button>\r\n            </div>\r\n            <div className='sidebar-item1'>\r\n            <span><MdOutlinePlaylistAdd size={25} id=\"sidebar-icon\"/></span>\r\n                <button onClick={() => setContentDisplay(4)}>\r\n                    <p>Your PlayLists</p>\r\n                </button>\r\n            </div>\r\n            <div className='sidebar-item1'>\r\n                <span><AiOutlineHeart size={25} id=\"sidebar-icon\"/></span>\r\n                <button onClick={()=>setContentDisplay(2)} >\r\n                    <p>Favorites Songs</p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import './FileList.scss'\r\n\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n//dynamic URL\r\nimport { URL } from '../../scripts/url'\r\n\r\n//react-icons\r\nimport {BiAddToQueue} from 'react-icons/bi'\r\nimport {BsArrowRightShort} from 'react-icons/bs'\r\n\r\n//redux\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {setDisplay, setSong} from '../../reducers/musicReducer'\r\n\r\nimport {miniListDisplay} from '../../reducers/playlistReducer'\r\n\r\nimport {getDisplay, setPlaylistId} from '../../reducers/addSongReducer'\r\n\r\n\r\nfunction FileListItem({item,itemId}){\r\n\r\n    //DB data\r\n    const [data, setData] = useState([]);\r\n\r\n    //catching error into state to eventually display\r\n    const [error, setError] = useState([])\r\n\r\n    //redux variables\r\n    const dispatch = useDispatch();\r\n\r\n    //playlist list display (dropmenu)\r\n    const listDisplay = useSelector((state)=> state.playlistReducer.listDisplay);\r\n\r\n    //add song display (addsong-container)\r\n    const addSongDisplay = useSelector((state)=>state.addSongReducer.display);\r\n\r\n    //states\r\n    const playlistId = useSelector((state)=>state.addSongReducer.playlistId);\r\n\r\n    //toggle display playlist songs\r\n    const dropMenuDisplay = () =>{\r\n        if(listDisplay === item){\r\n            dispatch(miniListDisplay(''))\r\n        }\r\n        else{\r\n            dispatch(miniListDisplay(item))\r\n        }\r\n    }\r\n\r\n    //sendata for creating new playlist\r\n    const playSong = (item) =>{\r\n\r\n        axios.post(URL + '/pd', {\r\n            \"song\" : item\r\n            }, {\r\n                withCredentials : true\r\n            })\r\n            .then(function () {\r\n             console.log('ok!')\r\n            })\r\n            \r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    //sendata for creating new playlist\r\n    const sendData = () =>{\r\n        try{\r\n            axios.post(URL + '/newsong', {\r\n                \"musicId\" : itemId,\r\n                \"playlistId\" : playlistId,\r\n                })\r\n            .then(function () {\r\n                dispatch(getDisplay(false));\r\n            })\r\n\r\n            .catch(function (error) {\r\n                setError(error);\r\n            });\r\n        }  \r\n        catch(error){\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n\r\n    //get playlists names \r\n    const loadPlaylists = () =>{\r\n        try{\r\n            axios.get(URL + '/playlists', {withCredentials: true})\r\n                .then((response) =>{\r\n                    setData(response.data[0][0]);\r\n                })\r\n                .catch((error) =>{\r\n                    setError(error);\r\n                })\r\n        }\r\n        catch(error){\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='file-list-child' data-testid=\"fileListItems-test\"> \r\n            <div className='file-list-songs'>\r\n                <button onClick={()=>{dispatch(setDisplay('open')); dispatch(setSong(item)); playSong(item)}}>{item}</button>\r\n                {listDisplay === item ?(\r\n                    <button onClick={()=>{dispatch(miniListDisplay(item)); dropMenuDisplay(); dispatch(getDisplay(false))}}><BsArrowRightShort size={28} className=\"file-list-child-icon\"/></button> \r\n                ):(\r\n                    <button onClick={()=>{dispatch(miniListDisplay(item)); dropMenuDisplay(); loadPlaylists(); dispatch(getDisplay(false))}}><BiAddToQueue size={23} className=\"file-list-child-icon\"/></button> \r\n                )}\r\n            </div>\r\n\r\n            <div className='file-list-dropmenu'>\r\n                {listDisplay === item ?(\r\n                    <div className='dropmenu-box'>\r\n                        { addSongDisplay ?(\r\n                            <div className='add-song-container'>\r\n                                <p>Add this song to this playlist ?</p>\r\n                                <div>\r\n                                    <button onClick={()=>dispatch(getDisplay(false))}>Cancel</button>\r\n                                    <button onClick={()=>sendData()}>Yes</button>\r\n                                </div>\r\n                            </div>\r\n                        ):(\r\n                            <>\r\n                                {error.length === 0 ?(\r\n                                    data.map((playlist) =>{\r\n                                        return(\r\n                                            <button id={playlist.playlistId} key={playlist.playlistId} className=\"playlist-items\" onClick={()=>{dispatch(getDisplay(true));  dispatch(setPlaylistId(playlist.playlistId))}}>{playlist.playlistName}</button>\r\n                                        );\r\n                                    })\r\n                                ):(\r\n                                    <p>An error just occured...</p>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                ):(\r\n                    <p></p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileListItem;","import './FileList.scss'\r\n\r\nimport { useState, useEffect, memo } from 'react'\r\nimport axios from 'axios'\r\n\r\n//importing dynamic URL\r\nimport { URL } from '../../scripts/url'\r\n\r\n//import FileListItem component\r\nimport FileListItem from './FileListItem'\r\n\r\n//redux\r\nimport { useDispatch } from 'react-redux'\r\nimport {miniListDisplay} from '../../reducers/playlistReducer'\r\n\r\n//import dynamic URL avoiding static \"localhost\" in code\r\nconst baseURL = URL + '/songs';\r\n\r\nfunction FileListError(props){\r\n    return(\r\n        <>\r\n            {props.error === 'no-file' ?(\r\n                <div>\r\n                    <h1>Your File List</h1>\r\n                    <p id='no-file-list'>Your music list is empty...</p>\r\n                </div>\r\n            ):(\r\n                <div id='error-file-list'>\r\n                    <h1>Your File List</h1>\r\n                    <p>An error just occured...</p>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction FileList(){\r\n\r\n    //data from useEffect request\r\n    const [data, setData] = useState([]);\r\n\r\n    //redux variables\r\n    const dispatch = useDispatch();\r\n\r\n    //catching errors into state for error managing in UI\r\n    const [error, setError] = useState([]);\r\n\r\n    //get data on DOM loading\r\n    useEffect(() => {\r\n\r\n        //closing list of playlists on switching between components\r\n        dispatch(miniListDisplay(0))\r\n\r\n        try{\r\n            axios.get(baseURL, {withCredentials: true})\r\n\r\n                .then((response) => {\r\n                    setData(response.data[0][0]);\r\n                })\r\n                .catch((error)=>{\r\n                    setError(error)\r\n                    console.clear();\r\n                });\r\n        }\r\n\r\n        catch(error) {\r\n            setError(error);\r\n            console.clear()\r\n        }\r\n\r\n    }, [dispatch]);\r\n\r\n    return(\r\n        <div data-testid=\"file-list-test\">\r\n            {error.length === 0 ?(\r\n                <div className='filelist-section'>\r\n                    {data.length === 0 ?(\r\n                        <FileListError error={'no-file'} />\r\n                    ):(\r\n                        <div>\r\n                            <h1>Your File List</h1>\r\n                            <div className='music-list-items'>\r\n                                {data.map((item) => (\r\n                                    <FileListItem item={item.musicTitle} key={item.musicId} itemId={item.musicId}/>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ):(\r\n                <FileListError error={''} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default memo (FileList);\r\n","import React from 'react'\r\nimport './FavSongs.css'\r\n\r\n//import {URL} from '../../scripts/url'\r\n\r\nfunction FavSongs(){\r\n\r\n    return(\r\n        <div className='favorite-section'>\r\n            <h1>Your Favorite Songs List</h1>\r\n            <div className='fav-songs-list'></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavSongs;","import \"./SoundPlayer.css\";\r\n\r\n//import musicSample1 from \"link\";\r\n//import musicSample2 from \"link\";\r\nimport { useState } from \"react\";\r\nimport {BsFillPlayFill} from 'react-icons/bs'\r\nimport {BsStopFill} from 'react-icons/bs'\r\n\r\nimport axios from 'axios'\r\n\r\nimport { URL } from '../../scripts/url'\r\n\r\nimport {closeSong} from '../../reducers/musicReducer'\r\n\r\n//redux\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nfunction pressed() {\r\n    alert('Select a music to play !');\r\n}\r\n  \r\n\r\nfunction SoundPlayer() {\r\n    const dispatch = useDispatch();\r\n    const song = useSelector((state) => state.musicReducer.song)\r\n\r\n    //sendata for creating new playlist\r\n    const stopSong = () =>{\r\n\r\n        axios.post(URL + '/stopsong')\r\n            .then(function () {\r\n                console.log('ok!')\r\n            })\r\n            \r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sound-player\" data-testid=\"soundplayer-test\">\r\n            <div>\r\n                {song === \"\" ? (\r\n                    <button className=\"button-play\"><BsFillPlayFill size={45} id=\"play-icon\"/></button>\r\n                ):(\r\n                    <button onClick={()=>{dispatch(closeSong()); stopSong()}} className=\"button-play\"><BsStopFill size={45} id=\"play-icon\"/></button>\r\n                )}\r\n            </div>\r\n            <div className=\"messagedefilant\">\r\n                <div>\r\n                    <marquee>{song}</marquee>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundPlayer;\r\n","import './DropDown.scss'\r\n\r\nimport {useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n//react-icons\r\nimport {MdArrowDropDown} from 'react-icons/md'\r\nimport {BsTrash} from 'react-icons/bs'\r\nimport {TiDelete} from 'react-icons/ti'\r\n\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { playlistDisplay } from '../../../reducers/playlistReducer';\r\n\r\n//importing dynamic URL\r\nimport {URL} from '../../../scripts/url'\r\n\r\nfunction DropDownError(props){\r\n    return(\r\n        <>\r\n            {props.error === 'no-songs' ? (\r\n                <p>You don't have any songs in this playlist...</p>\r\n            ):(\r\n                <p>An error just occured...</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Song(props){\r\n\r\n    const [display, setDisplay] = useState(true);\r\n\r\n    const deleteSong = (songId) =>{\r\n        axios.delete(URL + '/deletesongplaylist/' + songId)\r\n            .then(()=>{\r\n                //à venir\r\n            })\r\n            .catch(()=>{\r\n                //à venir\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className={display ? 'songs-items' : 'none'} key={props.id}>\r\n            <button onClick={()=>{deleteSong(props.id); setDisplay(false)}} ><TiDelete size={24} className='songs-items-icons'/></button>\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction DropDown({id, title}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState([]);\r\n\r\n    const [display, setDisplay] = useState(true);\r\n \r\n    //load songs by playlists\r\n    const LoadSongs = () => {\r\n        axios.get(URL + '/playlistsongs/' + id)\r\n            .then((response) =>{\r\n                setData(response.data[0][0])\r\n            })\r\n            .catch((error) =>{\r\n                setError(error);\r\n                console.clear();\r\n            })\r\n    }\r\n\r\n    const deletePlaylist = (id) =>{\r\n        axios.delete(URL + '/playlist/' + id)\r\n            .then(()=>{\r\n                //à venir\r\n            })\r\n            .catch(()=>{\r\n                //à venir\r\n            })\r\n    }\r\n\r\n    //redux variables\r\n    const playlistId = useSelector((state) => state.playlistReducer.display)\r\n    const dispatch = useDispatch();\r\n\r\n    //toggle state\r\n    const checkstate = () =>{\r\n        if(id === playlistId){\r\n            dispatch(playlistDisplay(0))\r\n        }\r\n        else{\r\n            dispatch(playlistDisplay(id))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={display ? 'dropdown' : 'none'} data-testid=\"dropdown-component\">\r\n            <div className='dropdown-menu' onClick={()=>{dispatch(playlistDisplay(id)); checkstate(); LoadSongs()}}>\r\n                <p className='playlist-name'>{title}</p>\r\n                <div>\r\n                    <button className='gear-button' onClick={()=>{deletePlaylist(id); setDisplay(false)}}><BsTrash className='playlist-gear-icon' size={20}/></button>\r\n                    <button className='dropdown-button'onClick={()=>{dispatch(playlistDisplay(id)); checkstate()}}><MdArrowDropDown className='dropdown-menu-icon' size={28} /></button>\r\n                </div>\r\n            </div>\r\n            <div className='dropdown-content'>\r\n                {error.length === 0?(\r\n                    <>\r\n                        {playlistId === id?(\r\n                            <div className='dropdown-songs'>\r\n                                {data.length === 0? (\r\n                                    <p>Aucune musique dans cette playlist...</p>\r\n                                ):(\r\n                                    <div>\r\n                                        {data.map((item)=>{\r\n                                            return(\r\n                                                <Song id={item.musicId} title={item.musicTitle} key={item.musicId}/>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ):(\r\n                            <div></div>\r\n                        )}\r\n                    </>\r\n                ):(\r\n                    <DropDownError error={''} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropDown;","import './Playlist.scss'\r\n\r\nimport {useEffect, useRef, useState, memo} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport {RiAddFill, RiCloseFill} from 'react-icons/ri'\r\n\r\n//importing dynamic URL\r\nimport {URL} from '../../scripts/url'\r\n\r\n//Dropdown component\r\nimport DropDown from './DropDown/DropDown';\r\n\r\n//redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { playlistDisplay } from '../../reducers/playlistReducer';\r\n\r\n//gestion des erreurs\r\nfunction PlaylistError(props){\r\n    return(\r\n        <>\r\n            {props.error === 'no-files' ? (\r\n                <p className='playlist-message'>You don't have any playlists for the moment...</p>\r\n            ):(\r\n                <p className='playlist-message'>An error just occured...</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction PlayList(){\r\n\r\n    //states \r\n    const [data, setData] = useState([]);\r\n    const [createPlaylist, setCreatePlaylist] = useState(false);\r\n\r\n    //catching errors\r\n    const [error, setError] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //input for creating a new playlist\r\n    const input = useRef(null);\r\n\r\n    //change display for creating new playlist (handling event between true and false)\r\n    const changeDisplay = () =>{\r\n        createPlaylist ? setCreatePlaylist(false) : setCreatePlaylist(true)\r\n    }\r\n\r\n    //load playlists\r\n    useEffect(() =>{\r\n\r\n        //closing dropdown when swithcing between components\r\n        dispatch(playlistDisplay(0))\r\n\r\n        try{\r\n            axios.get(URL + '/playlists', {withCredentials : true})\r\n                .then((response) =>{\r\n                    setData(response.data[0][0])\r\n                })\r\n                .catch((error) =>{\r\n                    setError(error);\r\n                })\r\n        }\r\n        catch(error){\r\n            setError(error)\r\n            console.clear();\r\n        }\r\n    }, [dispatch]);\r\n\r\n    //sendata for creating new playlist\r\n    const sendData = () =>{\r\n        axios.post(URL + '/createplaylist', {\r\n            \"playlistName\" : input.current.value\r\n        }, {withCredentials : true})\r\n            .then(()=>{\r\n            //à définir\r\n            })\r\n\r\n            .catch(()=>{\r\n                console.clear()\r\n            });\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='playlists-container' data-testid=\"playlist-component\"> \r\n            <div className='playlist-container-menu'>  \r\n                <h1>Your PlayLists</h1>\r\n                {createPlaylist ?(\r\n                    <button onClick={()=>changeDisplay()}><RiCloseFill  size={30} className='playlist-container-menu-icon' /></button>\r\n                ):(\r\n                    <button onClick={()=>changeDisplay()}><RiAddFill size={30} className='playlist-container-menu-icon' /></button>\r\n                )}\r\n            </div> \r\n            <div>\r\n                {createPlaylist?(\r\n                    <form className='add-playlist' onSubmit={sendData}>\r\n                        <input type=\"text\" placeholder='Create a new playlist' ref={input}></input>\r\n                        <button type=\"submit\">Add Playlist</button>\r\n                    </form>\r\n                ):(\r\n                    <div></div>\r\n                )}\r\n            </div>\r\n            <div> \r\n                {error.length === 0 ?(\r\n                    <>\r\n                        {data.length === 0?(\r\n                            <PlaylistError error={'no-files'}/>\r\n                        ):(\r\n                            <div className='playlist-dropdowns'>\r\n                                {data.map((item)=>{\r\n                                    return(\r\n                                        <DropDown id={item.playlistId} title={item.playlistName} key={item.playlistId}/>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                ):(\r\n                    <PlaylistError error={''} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo (PlayList);","import './UploadMusic.css'\r\n\r\nimport { useRef, useState, memo } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\n//react-icons\r\nimport {ImCross} from 'react-icons/im'\r\n\r\n//importing dynamic url\r\nimport {URL} from '../../scripts/url'\r\n\r\nconst MAX_MUSIC = 20;\r\n\r\nfunction UploadMusic () {\r\n\r\n    const [musicNameList, setMusicNameList] = useState([]);\r\n    const musicFilesList = useRef([]);\r\n\r\n    function onInputChange (event) {\r\n\r\n        const newMusicFiles = Object.entries(event.target.files).map(entry => entry[1])\r\n        newMusicFiles.forEach(musicFile => {\r\n            // Check if the song already exist into the queue\r\n            if (musicNameList.findIndex(musicName => {return musicName === musicFile.name}) === -1) {\r\n                // Check if not over the music cap\r\n                if (musicNameList.length >= MAX_MUSIC) {\r\n                    return NotificationManager.info(`You can't have more than ${MAX_MUSIC} into the queue`, 'Too much songs', 5000);\r\n                }\r\n                // Add the music into the queue\r\n                setMusicNameList( current => [...current, musicFile.name]);\r\n                musicFilesList.current.push(musicFile);\r\n            }\r\n        });\r\n    }\r\n\r\n    function deleteMusicFromQueue (event) {\r\n        event.preventDefault();\r\n        const musicToDelete = event.currentTarget.value;\r\n        setMusicNameList(current => current.filter(musicName => musicName !== musicToDelete));\r\n        musicFilesList.current.filter(musicFile => musicFile.name !== musicToDelete);\r\n        return NotificationManager.info(`The music ${musicToDelete} has been deleted from the queue`, 'Successfull delete', 5000);\r\n    }\r\n\r\n    function deleteQueue () {\r\n        if(musicNameList.length) {\r\n            setMusicNameList([]);\r\n            musicFilesList.current = [];\r\n            return NotificationManager.info(`The queue has been cleared`, 'Successfull clear', 5000);\r\n        }\r\n    }\r\n\r\n    function onSubmit (event) {\r\n        event.preventDefault();\r\n        if (musicFilesList.current.length) {\r\n            // Prepare the data to be send\r\n            const data = new FormData();\r\n            for (const musicFile of musicFilesList.current ) {\r\n                data.append('musicFile', musicFile)\r\n            }\r\n            NotificationManager.info(\"Please wait\", \"You've send the music\", 5000);\r\n            axios.post(`${URL}/uploadMusic`, data, {\r\n                headers: {\"Content-Type\": \"multipart/form-data\"},\r\n                withCredentials : true\r\n            })\r\n                .then(() => {\r\n                    NotificationManager.success('You are now free to use what you\\'ve uploaded', 'Upload succes', 5000);\r\n                })\r\n                .catch(() => {\r\n                    NotificationManager.error('Please retry later', 'Something went wrong', 5000);\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div data-testid=\"uploadMusic-component\">\r\n            <NotificationContainer/>\r\n            <form onSubmit={onSubmit}>\r\n                <input type={'file'} multiple={true} accept={'.mp3, .wav'} id={'musicFileInput'} className='music-file-input' onChange={onInputChange} data-testid=\"form-input\"/>\r\n                <label htmlFor='musicFileInput'>\r\n                    <div className='music-file-input-content'>\r\n                        {\r\n                            musicNameList.length === 0 ? (\r\n                                    <p> Click here to load your musics </p>\r\n                                ) : (\r\n                                    musicNameList.map(musicName => {\r\n                                        return (\r\n                                            <div key={musicName}>\r\n                                                📁 {musicName}\r\n                                                <button type='button'className='delete-music-from-queue' value={musicName} onClick={deleteMusicFromQueue}><ImCross className='delete-music-from-queue'/></button>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                )\r\n                        }\r\n                    </div>\r\n                </label>\r\n                <div className='form-control-button'>\r\n                    <button type='button' onClick={deleteQueue}> Cancel </button>\r\n                    <button type='submit'> Submit </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo (UploadMusic);","import React, { useState, useContext } from 'react'\r\nimport './DashBoard.scss';\r\n\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport SideBar from '../../components/SideBar/SideBar';\r\nimport FileList from '../../components/FileList/FileList';\r\nimport FavSongs from '../../components/FavSongs/FavSongs';\r\nimport SoundPlayer from '../../components/SoundPlayer/SoundPlayer';\r\nimport PlayList from '../../components/PlayList/Playlist';\r\nimport { ThemeContext } from '../../components/Context/ThemeContext';\r\nimport UploadMusic from '../../components/UploadMusic/UploadMusic';\r\n\r\n//redux\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nfunction DashBoard(){\r\n\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    const[contentDisplay, setContentDisplay] = useState(0);\r\n\r\n    //const display = useSelector((state)=>state.musicReducer.display);\r\n    const display = true;\r\n    return(\r\n        <div>\r\n            <NavBar contentDisplay={contentDisplay} setContentDisplay={setContentDisplay} />\r\n            <div className={theme ? 'dashboard-section-dark' : 'dashboard-section-light'}>\r\n\r\n                <SideBar contentDisplay={contentDisplay} setContentDisplay={setContentDisplay}/>\r\n                <div className='components-container'>\r\n                    <div className='main-content'>\r\n\r\n                        {( ()=>{\r\n                            switch(contentDisplay){\r\n                            case(0):\r\n                                return(\r\n                                    <div className='dashboard-main-component'>\r\n                                        <h1>Welcome to ShuffleTunes !</h1>\r\n                                        <p>Use our different options to optimize your experience on our App</p>\r\n                                        <button onClick={() => setContentDisplay(3)}>Try it now</button>\r\n                                    </div>\r\n                                )\r\n                            case(1):\r\n                                return(\r\n                                    <FileList/>\r\n                                )\r\n\r\n                            case(2):\r\n                                return(\r\n                                    <FavSongs />\r\n                                )\r\n\r\n                                case(3):\r\n                                return(\r\n                                    <UploadMusic />\r\n                                )\r\n\r\n                            case(4):\r\n                                return(\r\n                                    <PlayList />\r\n                                )\r\n\r\n                            default: \r\n                                return(\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n\r\n                        })()}\r\n                    </div>\r\n                    <div>\r\n                        {display ?\r\n                            (\r\n                                <SoundPlayer />\r\n                            ):\r\n                            (\r\n                                <div></div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashBoard;"],"names":["useState","error","setError","data","setData","useEffect","axios","URL","then","response","catch","className","length","src","logo","alt","width","height","pseudo","size","ChangePassword","props","modificationPswd","setModificationPswd","pswdInput","useRef","confirmPswd","onClick","setChangePswd","type","placeholder","ref","required","minLength","maxLength","id","pswd","current","value","checkPswd","ChangePseudo","modificationPseudo","setModificationPseudo","pseudoInput","setChangePseudo","setModal","theme","useContext","ThemeContext","changePswd","changePseudo","createPortal","console","log","document","body","setDropdown","modal","name","Switch","toggleTheme","dropdown","displayState","display","reducer","state","action","setContentDisplay","useReducer","dispatch","withCredentials","window","location","item","itemId","useDispatch","listDisplay","useSelector","playlistReducer","addSongDisplay","addSongReducer","playlistId","dropMenuDisplay","miniListDisplay","setDisplay","setSong","playSong","getDisplay","loadPlaylists","sendData","map","playlist","setPlaylistId","playlistName","baseURL","FileListError","FileList","clear","musicTitle","musicId","memo","song","musicReducer","closeSong","DropDownError","Song","songId","title","checkstate","playlistDisplay","deletePlaylist","PlaylistError","PlayList","createPlaylist","setCreatePlaylist","input","changeDisplay","onSubmit","UploadMusic","musicNameList","setMusicNameList","musicFilesList","deleteMusicFromQueue","event","preventDefault","musicToDelete","currentTarget","filter","musicName","musicFile","NotificationManager","FormData","append","headers","multiple","accept","onChange","Object","entries","target","files","entry","forEach","findIndex","push","htmlFor","contentDisplay"],"sourceRoot":""}