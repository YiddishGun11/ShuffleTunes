{"version":3,"file":"static/js/233.3938f87d.chunk.js","mappings":"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","sources":["components/Settings/UserSettings/UserSettings.js","components/Settings/DropSettings/DropSettings.js","components/Settings/Settings.js","components/NavBar/NavBar.js","components/SideBar/SideBar.js","components/FileList/FileListItem.js","components/FileList/FileList.js","components/FavSongs/FavSongs.js","components/SoundPlayer/SoundPlayer.js","components/PlayList/DropDown/DropDown.js","components/PlayList/Playlist.js","pages/DashBoard/DashBoard.js","scripts/url.js"],"sourcesContent":["import {useContext, useEffect, useState, useRef} from 'react'\r\nimport './UserSettings.scss'\r\n\r\nimport {createPortal} from 'react-dom'\r\nimport { ThemeContext } from '../../Context/ThemeContext';\r\n\r\nimport {URL} from '../../../scripts/url'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {BiExit} from 'react-icons/bi'\r\nimport {BsFillPenFill} from 'react-icons/bs'\r\n\r\nfunction UserSettings({setModal}){\r\n\r\n    //adapt theme colors\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    //catching errors\r\n    const [error, setError] = useState([]);\r\n\r\n    //data from useEffect()\r\n    const [data, setData] = useState([])\r\n\r\n    //state manipulation for changing the display dynamically\r\n    const [changePswd, setChangePswd] = useState(false);\r\n    const [changePseudo, setChangePseudo] = useState(false);\r\n\r\n\r\n    //load playlists\r\n    useEffect(() =>{\r\n        axios.get(URL + '/user/' + 2 )\r\n            .then((response) =>{\r\n                setData(response.data[0][0])\r\n            })\r\n            .catch((error) =>{\r\n                setError(error);\r\n            })\r\n    }, []);\r\n\r\n    return createPortal(\r\n        <section className='user-settings-section'>\r\n            {error.length === 0?(\r\n                <div className='user-settings-body'>\r\n                    <div className={theme ? 'settings-header-dark' : 'settings-header-light'}>\r\n                        <h1>My account</h1>\r\n                        <button onClick={()=>setModal(false)}><BiExit size={30} /></button>\r\n                    </div>\r\n                    <div className='settings-items'>\r\n                        <div className='settings-user-pseudo'>\r\n                            <h1 onClick={()=>console.log(data.pseudo)}>Hello</h1>\r\n                            <h1>{data.pseudo}</h1>\r\n                            <span id='hello-span'>👋🏻</span>\r\n                        </div>\r\n                        <div className='settings-user-infos'>\r\n                            <div className='settings-user-infos-items'>\r\n                                <div className='change-informations'>\r\n                                    {changePseudo ?(\r\n                                        <ChangePseudo setChangePseudo={setChangePseudo} pseudo={data.pseudo}/>\r\n                                    ):(\r\n                                        <>\r\n                                            <h2>Your pseudo</h2>\r\n                                            <div>\r\n                                                <p>{data.pseudo}</p>\r\n                                                <button onClick={()=>setChangePseudo(true)}><BsFillPenFill size={15} id=\"settings-pen\"/></button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                                <div className='change-informations'>\r\n                                    {changePswd ?(\r\n                                        <ChangePassword setChangePswd={setChangePswd} />\r\n                                    ):(\r\n                                        <>\r\n                                            <h2>Your password</h2>\r\n                                            <div>\r\n                                                <p>*************</p>\r\n                                                <button onClick={()=>setChangePswd(true)}><BsFillPenFill size={15} id=\"settings-pen\"/></button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <div className='user-settings-body'>\r\n                    <div className={theme ? 'settings-header-dark' : 'settings-header-light'}>\r\n                        <h1>My account</h1>\r\n                        <button onClick={()=>setModal(false)}><BiExit size={30} /></button>\r\n                    </div>\r\n                    <div className='settings-items'>\r\n                        <div className='settings-user-pseudo'>\r\n                            <h1>{}</h1>\r\n                        </div>\r\n                        <div className='settings-user-infos'>\r\n                            <div>\r\n                                <p id='modal-error-text'>An error just occured...</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </section>, document.body\r\n    )\r\n}\r\n\r\n\r\nfunction ChangePassword(props) {\r\n\r\n    //handling errors\r\n    const [modificationPswd, setModificationPswd] = useState('')\r\n\r\n    //inputs refs\r\n    const pswdInput = useRef(null);\r\n    const confirmPswd = useRef(null);\r\n\r\n    const checkPswd = () => {\r\n        const pswd = pswdInput.current.value;\r\n        const checkPswd = confirmPswd.current.value;\r\n\r\n        if(pswd !== checkPswd){\r\n            setModificationPswd('please, select the same password in the 2 fields')\r\n        }\r\n\r\n        else {\r\n            //axios request\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h2 onClick={()=>props.setChangePswd(false)}>New password</h2>\r\n            <div>\r\n                <input type=\"password\" placeholder='Enter your new password' ref={pswdInput} required minLength={5} maxLength={20}></input>\r\n                <input type=\"password\" placeholder='Confirm your password' ref={confirmPswd} required minLength={5} maxLength={20}></input>\r\n            </div>\r\n            <p id='modification-error-message'>{modificationPswd}</p>\r\n            <button id='confirm-pswd' onClick={()=>checkPswd()}>Confirm</button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction ChangePseudo(props){\r\n\r\n    //handling errors on modifications\r\n    const [modificationPseudo, setModificationPseudo] = useState('');\r\n\r\n    //inputs refs\r\n    const pseudoInput = useRef(null);\r\n\r\n    const checkPseudo = () => {\r\n        let pseudo = pseudoInput.current.value;\r\n\r\n        if(pseudo === props.pseudo){\r\n            setModificationPseudo('please, select a different pseudo')\r\n        }\r\n\r\n        else {\r\n            //axios request\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h2 onClick={()=>props.setChangePseudo(false)}>New pseudo</h2>\r\n            <div>\r\n                <input type=\"text\" placeholder='Enter your new pseudo' ref={pseudoInput} required minLength={5} maxLength={20}></input>\r\n                <button id='confirm-pseudo' onClick={()=>checkPseudo()}>Confirm</button>\r\n            </div>\r\n            <p id='modification-error-message'>{modificationPseudo}</p>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserSettings;","import React, {useState} from 'react'\r\nimport './DropSettings.scss'\r\n\r\nimport UserSettings from '../UserSettings/UserSettings'\r\n\r\nimport {HiArrowLeft} from 'react-icons/hi'\r\nimport {MdLanguage} from 'react-icons/md'\r\nimport {BsPersonLinesFill} from 'react-icons/bs'\r\n\r\nfunction DropSettings({setDropdown}){\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    return(\r\n        <section className='drop-settings-container'>\r\n            {modal ? (\r\n                <UserSettings setModal={setModal}/>\r\n            ):(\r\n                <>\r\n                    <div className='drop-settings-items' onClick={()=>setDropdown(true)}>\r\n                        <div>\r\n                            <HiArrowLeft size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <p>Go Back</p>\r\n                    </div>\r\n                    <div className='drop-settings-items' onClick={()=>setModal(true)}>\r\n                        <div>\r\n                            <BsPersonLinesFill size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <p>Profile settings</p>\r\n                    </div>\r\n                    <div className='drop-settings-items'>\r\n                        <div>\r\n                            <MdLanguage size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <select name=\"cars\" id=\"cars\">\r\n                            <option value=\"saab\">English</option>\r\n                            <option value=\"saab\">French</option>\r\n                        </select>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DropSettings;","import React, {useState, useContext} from 'react'\r\nimport './Settings.scss'\r\n\r\nimport { ThemeContext } from '../Context/ThemeContext'\r\nimport DropSettings from './DropSettings/DropSettings'\r\n\r\nimport {BsFillGearFill,BsFillMoonFill, BsFillSunFill} from 'react-icons/bs'\r\nimport {FaInfo} from 'react-icons/fa'\r\n\r\nfunction Switch(){\r\n\r\n    const {theme, toggleTheme} = useContext(ThemeContext);\r\n\r\n    return(\r\n        <div>\r\n            {theme ? (\r\n                <div className='settings-items' onClick={toggleTheme}>\r\n                    <div>\r\n                        <BsFillSunFill size={22} className=\"settings-icons\"/>\r\n                    </div>\r\n                    <p>LIGHT THEME</p>\r\n                </div>\r\n            ):(\r\n                <div className='settings-items' onClick={toggleTheme}>\r\n                    <div>\r\n                        <BsFillMoonFill size={22} className=\"settings-icons\"/>\r\n                    </div>\r\n                    <p>DARK THEME</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Settings(){\r\n\r\n    const [dropdown, setDropdown] = useState(true);\r\n\r\n    return(\r\n        <section className='settings-container'>\r\n            {dropdown ? (\r\n                <div>\r\n                    <div className='settings-items' onClick={()=>setDropdown(false)}>\r\n                        <div>\r\n                            <BsFillGearFill size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <p>Settings</p>\r\n                    </div>\r\n                    <Switch />\r\n                    <div className='settings-items'>\r\n                        <div>\r\n                            <FaInfo size={22} className=\"settings-icons\"/>\r\n                        </div>\r\n                        <p>Informations</p>\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <DropSettings setDropdown={setDropdown}/>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings;\r\n","import React, {useState, useContext} from 'react';\r\nimport './NavBar.scss';\r\n\r\nimport { ThemeContext } from '../Context/ThemeContext';\r\n\r\n//react icons\r\nimport {BsPersonLinesFill, BsGear} from 'react-icons/bs'\r\nimport {BiLogOut} from 'react-icons/bi'\r\n\r\nimport Settings from '../Settings/Settings';\r\n\r\nfunction NavBar({setContentDisplay}){\r\n\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    const handleDisplay = () =>{\r\n        display ? setDisplay(false) : setDisplay(true);\r\n    }\r\n\r\n    return(\r\n        <div className={theme ? 'navbar-section-dark': 'navbar-section-light'}>\r\n            <div className='navbar-section-items'>\r\n                <h1 onClick={()=>setContentDisplay(0)}  >ShuffleTunes</h1>\r\n            </div>\r\n            <div className='navbar-section-icons'>\r\n                <div className='navbar-section-icons-childs'>\r\n                    <BsPersonLinesFill size={20} id=\"navbar-icon\"/>\r\n                </div>\r\n                <div className='navbar-section-icons-childs'>      \r\n                    <BsGear size={20} onClick={()=>handleDisplay()} id=\"navbar-icon\"/>\r\n                    {display ?(\r\n                        <Settings/>\r\n                    ):(\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n                <div className='navbar-section-icons-childs'>\r\n                    <BiLogOut size={20} id=\"navbar-icon\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n/*\r\n    <div>\r\n        <BsPersonLinesFill size={25} />\r\n    </div>\r\n    <div>       \r\n        <BsGear size={25} />\r\n    </div>\r\n    <div>\r\n        <BiLogOut size={25}/>\r\n    </div>\r\n\r\n*/","import React, {useContext} from 'react'\r\nimport './SideBar.scss'\r\n\r\nimport { ThemeContext } from '../Context/ThemeContext'\r\n\r\nimport {BsFolderPlus, BsFolder} from 'react-icons/bs'\r\nimport {AiOutlineHeart} from 'react-icons/ai'\r\nimport {MdOutlinePlaylistAdd} from 'react-icons/md'\r\n\r\n\r\nfunction SideBar({setContentDisplay}){\r\n\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    return(\r\n        <div className={theme ? 'sidebar-dark' : 'sidebar-light'}>\r\n            <div className='sidebar-item1'>\r\n                <BsFolder size={25} id=\"sidebar-icon\"/>\r\n                <p onClick={()=>setContentDisplay(1)} >Your Files</p>\r\n            </div>\r\n            <div className='sidebar-item2'>\r\n                <BsFolderPlus size={25} id=\"sidebar-icon\"/>\r\n                <p>Upload new files</p>\r\n            </div>\r\n            <div className='sidebar-item2'>\r\n                <MdOutlinePlaylistAdd size={25} id=\"sidebar-icon\"/>\r\n                <p onClick={() => setContentDisplay(4)}>Your PlayLists</p>\r\n            </div>\r\n            <div className='sidebar-item2'>\r\n                <AiOutlineHeart size={25} id=\"sidebar-icon\"/>\r\n                <p onClick={()=>setContentDisplay(2)} >Favorites Songs</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { URL } from '../../scripts/url'\r\n\r\nimport './FileList.scss'\r\n\r\n//react-icons\r\nimport {BiAddToQueue} from 'react-icons/bi'\r\nimport {BsArrowRightShort} from 'react-icons/bs'\r\n\r\n//redux\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {setDisplay, setSong} from '../../reducers/musicReducer'\r\n\r\nimport {miniListDisplay} from '../../reducers/playlistReducer'\r\n\r\nimport {getDisplay, setPlaylistId} from '../../reducers/addSongReducer'\r\n\r\n\r\nfunction FileListItem({item,itemId}){\r\n\r\n    //DB data\r\n    const [data, setData] = useState([]);\r\n\r\n    //catching error into state to eventually display\r\n    const [error, setError] = useState([])\r\n\r\n    //redux variables\r\n    const dispatch = useDispatch();\r\n\r\n    //playlist list display (dropmenu)\r\n    const listDisplay = useSelector((state)=> state.playlistReducer.listDisplay);\r\n\r\n    //add song display (addsong-container)\r\n    const addSongDisplay = useSelector((state)=>state.addSongReducer.display);\r\n\r\n    //states\r\n    const playlistId = useSelector((state)=>state.addSongReducer.playlistId);\r\n\r\n    //toggle display playlist songs\r\n    const dropMenuDisplay = () =>{\r\n        if(listDisplay === item){\r\n            dispatch(miniListDisplay(''))\r\n        }\r\n        else{\r\n            dispatch(miniListDisplay(item))\r\n        }\r\n    }\r\n\r\n    //sendata for creating new playlist\r\n    const playSong = (item) =>{\r\n\r\n        axios.post(URL + '/pd', {\r\n            \"song\" : item\r\n            })\r\n            .then(function () {\r\n             console.log('enfoiré')\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //sendata for creating new playlist\r\n    const sendData = () =>{\r\n        try{\r\n            axios.post(URL + '/newsong', {\r\n                \"musicId\" : itemId,\r\n                \"playlistId\" : playlistId,\r\n                })\r\n            .then(function () {\r\n                dispatch(getDisplay(false));\r\n            })\r\n\r\n            .catch(function (error) {\r\n                setError(error);\r\n            });\r\n        }  \r\n        catch(error){\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n\r\n    //get playlists names \r\n    const loadPlaylists = () =>{\r\n        try{\r\n            axios.get(URL + '/playlists')\r\n                .then((response) =>{\r\n                    setData(response.data[0]);\r\n                })\r\n                .catch((error) =>{\r\n                    setError(error);\r\n                })\r\n        }\r\n        catch(error){\r\n            setError(error);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='file-list-child'> \r\n            <div className='file-list-songs'>\r\n                <p onClick={()=>{dispatch(setDisplay('open')); dispatch(setSong(item)); playSong(item)}}>{item}</p>\r\n                {listDisplay === item ?(\r\n                    <button onClick={()=>{dispatch(miniListDisplay(item)); dropMenuDisplay(); dispatch(getDisplay(false))}}><BsArrowRightShort size={28} className=\"file-list-child-icon\"/></button> \r\n                ):(\r\n                    <button onClick={()=>{dispatch(miniListDisplay(item)); dropMenuDisplay(); loadPlaylists(); dispatch(getDisplay(false))}}><BiAddToQueue size={23} className=\"file-list-child-icon\"/></button> \r\n                )}\r\n            </div>\r\n\r\n            <div className='file-list-dropmenu'>\r\n                {listDisplay === item ?(\r\n                    <div className='dropmenu-box'>\r\n                        { addSongDisplay ?(\r\n                            <div className='add-song-container'>\r\n                                <p>Add this song to this playlist ?</p>\r\n                                <div>\r\n                                    <button onClick={()=>dispatch(getDisplay(false))}>Cancel</button>\r\n                                    <button onClick={()=>sendData()}>Yes</button>\r\n                                </div>\r\n                            </div>\r\n                        ):(\r\n                            <React.Fragment>\r\n                                {error.length === 0 ?(\r\n                                    data.map((playlist) =>{\r\n                                        return(\r\n                                            <p id={playlist.playlistId} key={playlist.playlistId} className=\"playlist-items\" onClick={()=>{dispatch(getDisplay(true));  dispatch(setPlaylistId(playlist.playlistId))}}>{playlist.playlistName}</p>\r\n                                        );\r\n                                    })\r\n                                ):(\r\n                                    <p>An error just occured...</p>\r\n                                )}\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                ):(\r\n                    <p></p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileListItem;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { URL } from '../../scripts/url'\r\nimport './FileList.scss'\r\n\r\n//redux\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport FileListItem from './FileListItem'\r\n\r\n//import dynamic URL avoiding static \"localhost\" in code\r\nconst baseURL = URL + '/songs';\r\n\r\nfunction FileListError(props){\r\n    return(\r\n        <React.Fragment>\r\n            {props.error === 'no-file' ?(\r\n                <div>\r\n                    <h1>Your File List</h1>\r\n                    <p id='no-file-list'>Your music list is empty...</p>\r\n                </div>\r\n            ):(\r\n                <div id='error-file-list'>\r\n                    <h1>Your File List</h1>\r\n                    <p>An error just occured...</p>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction FileList(){\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    //catching errors into state for error managing in UI\r\n    const [error, setError] = useState([]);\r\n\r\n    //get data on DOM loading\r\n    useEffect(() => {\r\n        try{\r\n            axios.get(baseURL + '/1')\r\n\r\n                .then((response) => {\r\n                    setData(response.data[0]);\r\n                })\r\n                .catch((error)=>{\r\n                    setError(error)\r\n                    console.clear();\r\n                });\r\n        }\r\n\r\n        catch(error) {\r\n            setError(error);\r\n            console.clear()\r\n        }\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            {error.length === 0 ?(\r\n                <div className='filelist-section'>\r\n                    {data.length === 0 ?(\r\n                        <FileListError error={'no-file'} />\r\n                    ):(\r\n                        <div>\r\n                            <h1>Your File List</h1>\r\n                            <div className='music-list-items'>\r\n                                {data.map((item) => (\r\n                                    <FileListItem item={item.musicTitle} key={item.musicId} itemId={item.musicId}/>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ):(\r\n                <FileListError error={''} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default FileList;\r\n","import React from 'react'\r\nimport './FavSongs.css'\r\n\r\n//import {URL} from '../../scripts/url'\r\n\r\nfunction FavSongs(){\r\n\r\n    return(\r\n        <div className='favorite-section'>\r\n            <h1>Your Favorite Songs List</h1>\r\n            <div className='fav-songs-list'></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavSongs;","import \"./SoundPlayer.css\";\r\n\r\n//import musicSample1 from \"link\";\r\n//import musicSample2 from \"link\";\r\n\r\nimport { useState } from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\n\r\n//redux\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\n\r\n//(nomMusic) => {\r\n//    axios.post(URL + '/launchSong', nomMusic);\r\n\r\n//    BACK => bash (nomMusic = request.body.data, request.user) //utilisé middelware confirm token \r\n//}\r\n\r\nfunction SoundPlayer() {\r\n    const song = useSelector((state) => state.musicReducer.song)\r\n\r\n    /*function getMusicName(path){\r\n    return (path.split('/').pop()).split('.')[0];\r\n    }*/\r\n\r\n\r\n    const musicTracks = [\r\n        {\r\n            name: song,\r\n            src: \"http://shuffletunes.local:81/Gazo_BECTE.mp3\"\r\n        },\r\n\r\n        \r\n    /*{\r\n        name: getMusicName(musicSample1),\r\n        src: musicSample1\r\n    },\r\n    {\r\n        name: getMusicName(musicSample2),\r\n        src: musicSample2\r\n    },*/\r\n    ];\r\n\r\n    const [trackIndex, setTrackIndex] = useState(0);\r\n\r\n    const handleClickPrevious = () => {\r\n        setTrackIndex((currentTrack) =>\r\n            currentTrack === 0 ? musicTracks.length - 1 : currentTrack - 1\r\n        );\r\n    };\r\n\r\n    const handleClickNext = () => {\r\n        setTrackIndex((currentTrack) =>\r\n            currentTrack < musicTracks.length - 1 ? currentTrack + 1 : 0\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"sound-player\" onClick={()=>console.log(musicTracks)}>\r\n            <AudioPlayer\r\n                style={{ borderRadius: \"1rem\", backgroundColor: \"#322c2c\", padding: \"10px 0px\", boxShadow: \"0 0 0px 0\"}}\r\n                src={musicTracks[trackIndex].src}\r\n                showSkipControls={true}\r\n                showJumpControls={false}\r\n                header={` ${musicTracks[trackIndex].name}`}\r\n                showFilledProgress={true}\r\n                showDownloadProgress={false}\r\n                onClickPrevious={handleClickPrevious}\r\n                onClickNext={handleClickNext}\r\n                onEnded={handleClickNext}\r\n                autoPlayAfterSrcChange={true}\r\n                //layout='stacked-reverse'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundPlayer;\r\n","import React, {useState } from 'react'\r\nimport axios from 'axios'\r\nimport {MdArrowDropDown} from 'react-icons/md'\r\nimport {BsGear} from 'react-icons/bs'\r\nimport {TiDelete} from 'react-icons/ti'\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { playlistDisplay } from '../../../reducers/playlistReducer';\r\n\r\nimport {URL} from '../../../scripts/url'\r\n\r\nimport './DropDown.scss'\r\n\r\nfunction DropDownError(props){\r\n    return(\r\n        <React.Fragment>\r\n            {props.error === 'no-songs' ? (\r\n                <p>You don't have any songs in this playlist...</p>\r\n            ):(\r\n                <p>An error just occured...</p>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction Song(props){\r\n\r\n    const [display, setDisplay] = useState(true);\r\n\r\n    const deleteSong = (songId) =>{\r\n        axios.delete(URL + '/deletesongplaylist/' + songId)\r\n            .then(()=>{\r\n                //à venir\r\n            })\r\n            .catch(()=>{\r\n                //à venir\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className={display ? 'songs-items' : 'none'} key={props.id}>\r\n            <button onClick={()=>{deleteSong(props.id); setDisplay(false)}} ><TiDelete size={24} className='songs-items-icons'/></button>\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction DropDown({id, title}){\r\n\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState([]);\r\n \r\n    //load songs by playlists\r\n    const LoadSongs = () => {\r\n        axios.get(URL + '/playlistsongs/' + id)\r\n            .then((response) =>{\r\n                setData(response.data[0])\r\n            })\r\n            .catch((error) =>{\r\n                setError(error);\r\n                console.clear();\r\n            })\r\n    }\r\n\r\n    //redux variables\r\n    const playlistId = useSelector((state) => state.playlistReducer.display)\r\n    const dispatch = useDispatch();\r\n\r\n    //toggle state\r\n    const checkstate = () =>{\r\n        if(id === playlistId){\r\n            dispatch(playlistDisplay(0))\r\n        }\r\n        else{\r\n            dispatch(playlistDisplay(id))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='dropdown'>\r\n            <div className='dropdown-menu' onClick={()=>{dispatch(playlistDisplay(id)); checkstate(); LoadSongs()}}>\r\n                <p className='playlist-name'>{title}</p>\r\n                <div>\r\n                    <button className='gear-button'><BsGear className='playlist-gear-icon' size={20}/></button>\r\n                    <button className='dropdown-button'onClick={()=>{dispatch(playlistDisplay(id)); checkstate()}}><MdArrowDropDown className='dropdown-menu-icon' size={28} /></button>\r\n                </div>\r\n            </div>\r\n            <div className='dropdown-content'>\r\n                {error.length === 0?(\r\n                    <React.Fragment>\r\n                        {playlistId === id?(\r\n                            <div className='dropdown-songs'>\r\n                                {data.length === 0? (\r\n                                    <p>Aucune musique dans cette playlist...</p>\r\n                                ):(\r\n                                    <div>\r\n                                        {data.map((item)=>{\r\n                                            return(\r\n                                                <Song id={item.musicId} title={item.musicTitle} key={item.musicId}/>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ):(\r\n                            <div></div>\r\n                        )}\r\n                    </React.Fragment>\r\n                ):(\r\n                    <DropDownError error={''} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropDown;","import React, {useEffect, useRef, useState} from 'react'\r\nimport './Playlist.scss'\r\nimport axios from 'axios'\r\n\r\nimport {RiAddFill, RiCloseFill} from 'react-icons/ri'\r\n\r\nimport {URL} from '../../scripts/url'\r\n\r\nimport DropDown from './DropDown/DropDown';\r\n\r\n//gestion des erreurs\r\nfunction PlaylistError(props){\r\n    return(\r\n        <>\r\n            {props.error === 'no-files' ? (\r\n                <p className='playlist-message'>You don't have any playlists for the moment...</p>\r\n            ):(\r\n                <p className='playlist-message'>An error just occured...</p>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nfunction PlayList(){\r\n\r\n    //states \r\n    const [data, setData] = useState([]);\r\n    const [createPlaylist, setCreatePlaylist] = useState(false);\r\n\r\n    //catching errors\r\n    const [error, setError] = useState([]);\r\n\r\n    //input for creating a new playlist\r\n    const input = useRef(null);\r\n\r\n    //change display for creating new playlist (handling event between true and false)\r\n    const changeDisplay = () =>{\r\n        createPlaylist ? setCreatePlaylist(false) : setCreatePlaylist(true)\r\n    }\r\n\r\n    //load playlists\r\n    useEffect(() =>{\r\n        try{\r\n            axios.get(URL + '/playlists')\r\n                .then((response) =>{\r\n                    setData(response.data[0])\r\n                })\r\n                .catch((error) =>{\r\n                    setError(error);\r\n                })\r\n        }\r\n        catch(error){\r\n            setError(error)\r\n            console.clear();\r\n        }\r\n    }, []);\r\n\r\n    //sendata for creating new playlist\r\n    const sendData = () =>{\r\n        axios.post(URL + '/createplaylist', {\r\n            \"playlistName\" : input.current.value,\r\n            \"userId\" : 1\r\n        })\r\n            .then(()=>{\r\n            //à définir\r\n            })\r\n\r\n            .catch(()=>{\r\n                console.clear()\r\n            });\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='playlists-container'>   \r\n            <div className='playlist-container-menu'>  \r\n                <h1>Your PlayLists</h1>\r\n                {createPlaylist ?(\r\n                    <button onClick={()=>changeDisplay()}><RiCloseFill  size={30} className='playlist-container-menu-icon' /></button>\r\n                ):(\r\n                    <button onClick={()=>changeDisplay()}><RiAddFill size={30} className='playlist-container-menu-icon' /></button>\r\n                )}\r\n            </div> \r\n            <div>\r\n                {createPlaylist?(\r\n                    <form className='add-playlist' onSubmit={sendData}>\r\n                        <input type=\"text\" placeholder='Create a new playlist' ref={input}></input>\r\n                        <button type=\"submit\">Add Playlist</button>\r\n                    </form>\r\n                ):(\r\n                    <div></div>\r\n                )}\r\n            </div>\r\n            <div> \r\n                {error.length === 0 ?(\r\n                    <>\r\n                        {data.length === 0?(\r\n                            <PlaylistError error={'no-files'}/>\r\n                        ):(\r\n                            <div className='playlist-dropdowns'>\r\n                                {data.map((item)=>{\r\n                                    return(\r\n                                        <DropDown id={item.playlistId} title={item.playlistName} key={item.playlistId}/>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                ):(\r\n                    <PlaylistError error={''} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayList;","import React, { useState, useContext } from 'react'\r\nimport './DashBoard.scss';\r\n\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport SideBar from '../../components/SideBar/SideBar';\r\nimport FileList from '../../components/FileList/FileList';\r\nimport FavSongs from '../../components/FavSongs/FavSongs';\r\nimport SoundPlayer from '../../components/SoundPlayer/SoundPlayer';\r\nimport PlayList from '../../components/PlayList/Playlist';\r\nimport { ThemeContext } from '../../components/Context/ThemeContext';\r\n\r\n//redux\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nfunction DashBoard(){\r\n\r\n    const {theme} = useContext(ThemeContext);\r\n\r\n    const[contentDisplay, setContentDisplay] = useState(0);\r\n\r\n    //const display = useSelector((state)=>state.musicReducer.display);\r\n    const display = true;\r\n    return(\r\n        <div>\r\n            <NavBar contentDisplay={contentDisplay} setContentDisplay={setContentDisplay} />\r\n            <div className={theme ? 'dashboard-section-dark' : 'dashboard-section-light'}>\r\n\r\n                <SideBar contentDisplay={contentDisplay} setContentDisplay={setContentDisplay}/>\r\n                <div className='components-container'>\r\n                    <div className='main-content'>\r\n\r\n                        {( ()=>{\r\n                            switch(contentDisplay){\r\n                            case(0):\r\n                                return(\r\n                                    <div className='dashboard-main-component'>\r\n                                        <h1>Welcome to ShuffleTunes !</h1>\r\n                                        <p>Use our different options to optimize your experience on our App</p>\r\n                                        <button onClick={() => setContentDisplay(3)}>Try it now</button>\r\n                                    </div>\r\n                                )\r\n                            case(1):\r\n                                return(\r\n                                    <FileList/>\r\n                                )\r\n\r\n                            case(2):\r\n                                return(\r\n                                    <FavSongs />\r\n                                )\r\n\r\n                            case(4):\r\n                                return(\r\n                                    <PlayList />\r\n                                )\r\n\r\n                            default: \r\n                                return(\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n\r\n                        })()}\r\n                    </div>\r\n                    <div>\r\n                        {display ?\r\n                            (\r\n                                <SoundPlayer />\r\n                            ):\r\n                            (\r\n                                <div></div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashBoard;","//ce fichier reprend la liste des variables globales utilisées dans l'application Web\r\n\r\n\r\nexport const URL = 'http://localhost:5000' ;"],"names":["ChangePassword","props","useState","modificationPswd","setModificationPswd","pswdInput","useRef","confirmPswd","onClick","setChangePswd","type","placeholder","ref","required","minLength","maxLength","id","pswd","current","value","checkPswd","ChangePseudo","modificationPseudo","setModificationPseudo","pseudoInput","setChangePseudo","pseudo","setModal","theme","useContext","ThemeContext","error","setError","data","setData","changePswd","changePseudo","useEffect","axios","URL","then","response","catch","createPortal","className","length","size","console","log","document","body","setDropdown","modal","name","Switch","toggleTheme","dropdown","setContentDisplay","display","setDisplay","item","itemId","dispatch","useDispatch","listDisplay","useSelector","state","playlistReducer","addSongDisplay","addSongReducer","playlistId","dropMenuDisplay","miniListDisplay","setSong","playSong","getDisplay","loadPlaylists","sendData","map","playlist","setPlaylistId","playlistName","baseURL","FileListError","clear","musicTitle","musicId","musicTracks","musicReducer","song","src","trackIndex","setTrackIndex","handleClickNext","currentTrack","style","borderRadius","backgroundColor","padding","boxShadow","showSkipControls","showJumpControls","header","showFilledProgress","showDownloadProgress","onClickPrevious","onClickNext","onEnded","autoPlayAfterSrcChange","DropDownError","Song","songId","title","checkstate","playlistDisplay","PlaylistError","createPlaylist","setCreatePlaylist","input","changeDisplay","onSubmit","contentDisplay"],"sourceRoot":""}